package de.jabc.cinco.meta.plugin.pyro.templates.presentation.java.components.modals.graph

import de.jabc.cinco.meta.plugin.pyro.templates.Templateable
import mgl.GraphModel
import java.util.ArrayList
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import java.util.HashMap
import de.jabc.cinco.meta.plugin.pyro.model.ConnectionConstraint
import de.jabc.cinco.meta.plugin.pyro.model.EmbeddingConstraint
import mgl.Type

class NewGraphDialog implements Templateable{
	
	override create(GraphModel graphModel, ArrayList<StyledNode> nodes, ArrayList<StyledEdge> edges, HashMap<String, ArrayList<StyledNode>> groupedNodes, ArrayList<ConnectionConstraint> validConnections, ArrayList<EmbeddingConstraint> embeddingConstraints, ArrayList<Type> enums)
	'''
package de.mtf.dywa.components.modals.graph;

import de.ls5.dywa.generated.controller.ProjectController;
import de.ls5.dywa.generated.controller.«graphModel.name.toFirstUpper»Controller;
import de.ls5.dywa.generated.entity.Project;
import de.ls5.dywa.generated.entity.«graphModel.name.toFirstUpper»;
import de.mtf.dywa.pages.Pyro;
import org.apache.tapestry5.SelectModel;
import org.apache.tapestry5.ValueEncoder;
import org.apache.tapestry5.annotations.Component;
import org.apache.tapestry5.annotations.InjectPage;
import org.apache.tapestry5.annotations.Parameter;
import org.apache.tapestry5.annotations.Property;
import org.apache.tapestry5.corelib.components.Form;
import org.apache.tapestry5.ioc.Messages;
import org.apache.tapestry5.ioc.annotations.Inject;
import org.apache.tapestry5.services.PageRenderLinkSource;
import org.apache.tapestry5.services.SelectModelFactory;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by Pyro CINCO Meta Plugin
 */
public class NewGraphDialog {


    @Inject
    private ProjectController projectController;

    @Inject
    private «graphModel.name.toFirstUpper»Controller «graphModel.name.toFirstLower»Controller;

    @InjectPage
    private Pyro pyro;

    @Parameter
    @Property
    private Project project;

    @Inject
    private Messages messages;

    @Inject
    private SelectModelFactory smf;

    @Component
    private Form newGraphDialogForm;

    @Property
    private String newGraphDialogName;

    @Property
    private String newGraphDialogType;

    @Inject
    private PageRenderLinkSource pageRenderLS;

    @Property
    private Class<«graphModel.name.toFirstUpper»> selectedGraphModel;

    @Property
    private List<Class<«graphModel.name.toFirstUpper»>> graphModels;

    private long newGraphModelId;

    private «graphModel.name.toFirstUpper» newGraphModel;

    @Property
    @Parameter
    private String linkCss;

    public void setupRender() {

        this.graphModels = new ArrayList<Class<«graphModel.name.toFirstUpper»>>();
        this.graphModels.add(«graphModel.name.toFirstUpper».class);
    }

    public ValueEncoder<Class<«graphModel.name.toFirstUpper»>> getTypeEncoder() {
        return new ValueEncoder<Class<«graphModel.name.toFirstUpper»>>() {

            @Override
            public Class<«graphModel.name.toFirstUpper»> toValue(String clientValue) {
                try {
                    return (Class<«graphModel.name.toFirstUpper»>) Class.forName(clientValue);
                } catch (ClassNotFoundException e) {
                    throw new RuntimeException(e);
                }
            }

            @Override
            public String toClient(Class<«graphModel.name.toFirstUpper»> value) {
                return value.getName();
            }
        };
    }
    
    public SelectModel getSelectModel() {
        return this.smf.create(graphModels, "name");
    }

    public void onValidateFromNewGraphDialogForm() {

    }
    public void onFailureFromNewGraphDialogForm() {

    }

    public void onSuccessFromNewGraphDialogForm() {
        this.newGraphModel = this.«graphModel.name.toFirstLower»Controller.create«graphModel.name.toFirstUpper»(newGraphDialogName);
        this.project.getgraphModels_GraphModel().add(this.newGraphModel);
        this.newGraphModelId = newGraphModel.getId();
        this.newGraphModel.setscaleFactor(2.0);
        this.newGraphModel.setedgeTriggerWidth(10.0);
        this.newGraphModel.setedgeStyleModeConnector("normal");
        this.newGraphModel.setedgeStyleModeRouter("");
        this.newGraphModel.setsnapRadius(20.0);
        this.newGraphModel.setpaperHeight(1000.0);
        this.newGraphModel.setpaperWidth(1000.0);
        this.newGraphModel.setgridSize(1.0);
        this.newGraphModel.setresizeStep(0.1);
        this.newGraphModel.setrotateStep(5.0);
        this.newGraphModel.settheme("default");
        this.newGraphModel.setminimizedMenu(false);
        this.newGraphModel.setminimizedGraph(false);
        this.newGraphModel.setminimizedMap(false);
    }

    public Object onSubmitFromNewGraphDialogForm() {
        return pageRenderLS.createPageRenderLinkWithContext("Pyro", this.project.getId(),this.newGraphModel.getId());
    }

    public void onPrepare(long projectId) {
        this.project = projectController.readProject(projectId);
    }
}
	
	'''
	
}