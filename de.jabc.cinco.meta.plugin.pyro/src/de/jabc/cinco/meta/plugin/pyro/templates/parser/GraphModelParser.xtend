package de.jabc.cinco.meta.plugin.pyro.templates.parser

import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import de.jabc.cinco.meta.plugin.pyro.model.StyledModelElement
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.TemplateContainer
import de.jabc.cinco.meta.plugin.pyro.templates.ElementTemplateable
import de.jabc.cinco.meta.plugin.pyro.utils.ModelParser
import mgl.Attribute
import mgl.Node
import mgl.ReferencedEClass
import mgl.ReferencedType

class GraphModelParser implements ElementTemplateable {
	
	override create(StyledModelElement sme, TemplateContainer tc)
	'''
		package de.ls5.cinco.pyro.parser.«tc.graphModel.name.toFirstLower»;
		
		import de.ls5.dywa.generated.entity.*;
		import de.ls5.cinco.pyro.transformation.api.«tc.graphModel.name.toFirstLower».*;
		«IF ModelParser.isCustomeActionAvailable(tc.graphModel)»
		import de.ls5.cinco.pyro.custom.action.«tc.graphModel.name.toFirstLower».*;
		«ENDIF»
		import de.ls5.cinco.pyro.parser.PointParser;
		import de.ls5.cinco.pyro.transformation.api.*;
		import org.json.simple.JSONArray;
		import org.json.simple.JSONObject;
		import java.util.Set;
		
		import java.text.MessageFormat;
		
		
		/**
		 * Generated by Pyro CINCO Meta Plugin
		 */
		public class «tc.graphModel.name.toFirstUpper»Parser {
		
			public static String getPrimeReferencesJSON(C«tc.graphModel.name.toFirstUpper» c«tc.graphModel.name.toFirstUpper»)
		    {
		    	String jsonString = "";
				«FOR ReferencedType primeRef:ModelParser.getPrimeReferencedModelElements(tc.graphModel,true)»
				    «««    TODO: Check if this worked. Unchecked cast to ReferencedEClass may be ReferencedModelElement in line
				//«(primeRef.eContainer as Node).name.toFirstUpper» - «(primeRef as ReferencedEClass).type.name.toFirstUpper» Prime Reference
		        JSONObject «(primeRef.eContainer as Node).name.toFirstLower»PrimeRefs = new JSONObject();
		        «(primeRef.eContainer as Node).name.toFirstLower»PrimeRefs.put("group","Prime «(primeRef.eContainer as Node).name.toFirstUpper»");
		        JSONArray «(primeRef.eContainer as Node).name.toFirstLower»PrimeElements = new JSONArray();
		        Set<«(primeRef as ReferencedEClass).type.name.toFirstUpper»> «(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeSet = c«tc.graphModel.name.toFirstUpper».get«(primeRef as ReferencedEClass).type.name.toFirstUpper»Controller().fetch«(primeRef as ReferencedEClass).type.name.toFirstUpper»();
		        for(«(primeRef as ReferencedEClass).type.name.toFirstUpper» «(primeRef as ReferencedEClass).type.name.toFirstLower»:«(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeSet) {
		            JSONObject «(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeObject = new JSONObject();
		            «(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeObject.put("name","«(primeRef.eContainer as Node).name.toFirstUpper»");
		            «(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeObject.put("label",«(primeRef as ReferencedEClass).type.name.toFirstLower».get«ModelParser.getPrimeAttributeLabel(primeRef)»());
		            «(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeObject.put("dywaId",«(primeRef as ReferencedEClass).type.name.toFirstLower».getId());
		            «(primeRef.eContainer as Node).name.toFirstLower»PrimeElements.add(«(primeRef as ReferencedEClass).type.name.toFirstLower»PrimeObject);
		        }
		        «(primeRef.eContainer as Node).name.toFirstLower»PrimeRefs.put("nodes",«(primeRef.eContainer as Node).name.toFirstLower»PrimeElements);
		        jsonString += «(primeRef.eContainer as Node).name.toFirstLower»PrimeRefs.toJSONString();
				«ENDFOR»
		        return jsonString;
		    }
		    
			public static String getCustomeActionsJSON()
		    {
		        String jsonString = "";
		        «IF ModelParser.isCustomeAction(tc.graphModel)»
		        jsonString += "«tc.graphModel.name.toFirstUpper» : [";
		        «FOR String name: ModelParser.getCustomActionNames(tc.graphModel) SEPARATOR "jsonString += \",\";"»
		        «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
		        jsonString += "'"+«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName() + "'";
		        «ENDFOR»
		        jsonString += "]";
		        jsonString += ",";
		        «ENDIF»
				«FOR StyledNode sn:tc.nodes »
					«IF ModelParser.isCustomeAction(sn.modelElement)»
						jsonString += "«sn.modelElement.name.toFirstUpper» : [";
			        	«FOR String name: ModelParser.getCustomActionNames(sn.modelElement) SEPARATOR "jsonString += \",\";"»
			        		«ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
			        		jsonString += "'"+«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName() + "'";
			       		«ENDFOR»
			        	jsonString += "]";
			        	jsonString += ",";
		        	«ENDIF»
				«ENDFOR»
				«FOR StyledEdge sn:tc.edges »
					«IF ModelParser.isCustomeAction(sn.modelElement)»
						jsonString += "«sn.modelElement.name.toFirstUpper» : [";
		        		«FOR String name: ModelParser.getCustomActionNames(sn.modelElement) SEPARATOR "jsonString += \",\";"»
		        			«ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
		        			jsonString += "'"+«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName() + "'";
		       			«ENDFOR»
		        		jsonString += "]";
		        		jsonString += ",";
		       		«ENDIF»
				«ENDFOR»
		        return jsonString;
		    }
		
		    public static JSONArray toJSON(«tc.graphModel.name.toFirstUpper» «tc.graphModel.name.toFirstLower») {
		        JSONArray «tc.graphModel.name.toFirstLower»Attributes = new JSONArray();
		        
		        //Attributes
		        «FOR Attribute attribute:tc.graphModel.attributes»
		        «AttributeParser.createAttribute(attribute,tc.graphModel.name,tc.enums,tc.graphModel)»
		        «ENDFOR»
		        return «tc.graphModel.name.toFirstLower»Attributes;
		    }
		
		    public static String toJSONString(C«tc.graphModel.name.toFirstUpper» c«tc.graphModel.name.toFirstUpper») {
		    	String jsonPostString = "";
		        String jsonPreString =
		                "cinco_graphModelAttr = {0};\n";
		        jsonPreString = MessageFormat.format(jsonPreString,toJSON((«tc.graphModel.name.toFirstUpper»)c«tc.graphModel.name.toFirstUpper».getGraphModel()).toJSONString());
		        for(CModelElement cModelElement:c«tc.graphModel.name.toFirstUpper».getModelElements()){
		        	«FOR StyledNode sn:tc.nodes»
		        	«IF sn.modelElement instanceof Node»
		        	if(cModelElement.getModelElement() instanceof «sn.modelElement.name.toFirstUpper»){
		                jsonPreString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPreString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                jsonPostString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPostString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                continue;
		            }
		            «ENDIF»
		        	«ENDFOR»
		        	«FOR StyledNode sn:tc.nodes»
		        	«IF !(sn.modelElement instanceof Node)»
		        	if(cModelElement.getModelElement() instanceof «sn.modelElement.name.toFirstUpper»){
		                jsonPreString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPreString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                jsonPostString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPostString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                continue;
		            }
		            «ENDIF»
		        	«ENDFOR»
		        	«FOR StyledEdge sn:tc.edges»
		        	if(cModelElement.getModelElement() instanceof «sn.modelElement.name.toFirstUpper»){
		                jsonPreString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPreString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                jsonPostString += «sn.modelElement.name.toFirstUpper»Parser.toJSONPostString((«sn.modelElement.name.toFirstUpper»)cModelElement.getModelElement());
		                continue;
		            }
		        	«ENDFOR»
		        }
		        return jsonPreString + jsonPostString;
		    }
		
		}
	'''
}