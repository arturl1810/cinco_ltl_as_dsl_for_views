package de.jabc.cinco.meta.plugin.pyro.templates.message

import de.jabc.cinco.meta.plugin.pyro.templates.Templateable
import mgl.GraphModel
import java.util.ArrayList
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import java.util.HashMap
import de.jabc.cinco.meta.plugin.pyro.model.ConnectionConstraint
import de.jabc.cinco.meta.plugin.pyro.model.EmbeddingConstraint
import mgl.Type
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EPackage

class ResizeMessageParser implements Templateable{
	
	override create(GraphModel graphModel, ArrayList<StyledNode> nodes, ArrayList<StyledEdge> edges, HashMap<String, ArrayList<StyledNode>> groupedNodes, ArrayList<ConnectionConstraint> validConnections, ArrayList<EmbeddingConstraint> embeddingConstraints, ArrayList<Type> enums,ArrayList<GraphModel> graphModels,ArrayList<EPackage> ecores)
	'''
package de.ls5.cinco.pyro.message.«graphModel.name.toFirstLower»;

import de.ls5.cinco.pyro.transformation.api.«graphModel.name.toFirstLower».*;
import de.ls5.cinco.pyro.message.MessageParser;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.JSONArray;
import org.json.simple.parser.ParseException;

/**
 * Generated by Pyro CINCO Meta plugin
 */
public class ResizeMessageParser {

    public static JSONObject resizeElement(String jsonString,C«graphModel.name.toFirstUpper» c«graphModel.name.toFirstUpper»){
        JSONObject receivedMessage = MessageParser.parse(jsonString);
        JSONObject element = (JSONObject) receivedMessage.get("element");
        long elementId = Long.parseLong("" + element.get("cinco_id"));
        JSONObject size = (JSONObject) element.get("size");
        double height = Double.parseDouble("" + size.get("height"));
        double width = Double.parseDouble("" + size.get("width"));
        
		«FOR StyledNode sn:nodes»
		if(receivedMessage.get("name").equals("«sn.modelElement.name.toFirstUpper»")) {
		    C«sn.modelElement.name.toFirstUpper» c«sn.modelElement.name.toFirstUpper» = c«graphModel.name.toFirstUpper».getC«sn.modelElement.name.toFirstUpper»(elementId);
		    if(c«sn.modelElement.name.toFirstUpper» == null){
                return getResizeErrorResponse((JSONObject) receivedMessage.get("element"));
            }
		    c«sn.modelElement.name.toFirstUpper».resize((long)width,(long)height);
		    return getResizeResponse(true,c«sn.modelElement.name.toFirstUpper».getModelElement().getId(),(JSONObject) receivedMessage.get("element"));
		}
        «ENDFOR»
        return getResizeErrorResponse((JSONObject) receivedMessage.get("element"));
    }
    
    private static JSONObject getResponse() {
        JSONObject response = new JSONObject();
        return response;
    }

    private static JSONObject getResizeResponse(boolean valid,long id,JSONObject element) {
        JSONObject response = getResponse();
        response.put("valid",valid);
        response.put("dywaId",id);
        response.put("muId",(String) element.get("id"));
        return response;
    }

    private static JSONObject getResizeErrorResponse(JSONObject element) {
        JSONObject response = getResponse();
        response.put("valid",false);
        response.put("muId",(String) element.get("id"));
        return response;
    }
}
	
	'''
	
}