package de.jabc.cinco.meta.plugin.pyro.templates.presentation.java.components.modals.graph

import de.jabc.cinco.meta.plugin.pyro.templates.Templateable
import mgl.GraphModel
import java.util.ArrayList
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import java.util.HashMap
import de.jabc.cinco.meta.plugin.pyro.model.ConnectionConstraint
import de.jabc.cinco.meta.plugin.pyro.model.EmbeddingConstraint
import mgl.Type
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EPackage

class RemoveGraphDialog implements Templateable{
	
	override create(GraphModel graphModel, ArrayList<StyledNode> nodes, ArrayList<StyledEdge> edges, HashMap<String, ArrayList<StyledNode>> groupedNodes, ArrayList<ConnectionConstraint> validConnections, ArrayList<EmbeddingConstraint> embeddingConstraints, ArrayList<Type> enums,ArrayList<GraphModel> graphModels,ArrayList<EPackage> ecores)
	'''
package de.mtf.dywa.components.modals.graph;

import de.ls5.dywa.generated.controller.*;
import de.ls5.dywa.generated.entity.*;
import de.mtf.dywa.pages.Pyro;
import de.mtf.dywa.pages.Projects;
import org.apache.tapestry5.alerts.AlertManager;
import org.apache.tapestry5.alerts.Duration;
import org.apache.tapestry5.alerts.Severity;
import org.apache.tapestry5.annotations.Component;
import org.apache.tapestry5.annotations.InjectPage;
import org.apache.tapestry5.annotations.Parameter;
import org.apache.tapestry5.annotations.Property;
import org.apache.tapestry5.corelib.components.Form;
import org.apache.tapestry5.ioc.Messages;
import org.apache.tapestry5.ioc.annotations.Inject;

/**
 * Generated by Pyro CINCO Meta Plugin
 */
public class RemoveGraphDialog {

    @Inject
    private ProjectController projectController;

	«FOR GraphModel g:graphModels»
    @Inject
    private «g.name.toFirstUpper»Controller «g.name.toFirstLower»Controller;
	«ENDFOR»
    @Parameter
    @Property
    private GraphModel graphToRemove;

    @Parameter
    @Property
    private Project project;

    @Inject
    private AlertManager alertManager;

    @Inject
    private Messages messages;

    @InjectPage
    private Pyro pyroPage;

    @Component
    private Form removeGraphDialogForm;

    public void onValidateFromRemoveGraphDialogForm() {

    }

    public void onFailureFromremoveGraphDialogForm() {
    }

    public void onSuccessFromremoveGraphDialogForm() {

        String graphName = graphToRemove.getName();
        this.project.getgraphModels_GraphModel().remove(graphToRemove);
        «FOR GraphModel g : graphModels»
        if(graphToRemove instanceof «g.name.toFirstUpper») {
    		//this.«g.name.toFirstLower»Controller.delete«g.name.toFirstUpper»(graphToRemove);
    	}
		«ENDFOR»
        alertManager.alert(Duration.TRANSIENT, Severity.INFO,
                messages.format("successfully-removed", graphName));

    }

    public String getModalTitle() {
        return messages.format("modalTitle",this.graphToRemove.getName());
    }

    public String getModalMessage() {
        return messages.format("modalMessage",this.graphToRemove.getName());
    }

    public Object onSubmitFromremoveGraphDialogForm() {
        pyroPage.setContext(this.project,null);
        return this.pyroPage;
    }

    public void onPrepare(long projectId, long graphId) {
        this.project = projectController.readProject(projectId);
        «FOR GraphModel g : graphModels»
        this.graphToRemove = «g.name.toFirstLower»Controller.read«g.name.toFirstUpper»(graphId);
        if(this.graphToRemove != null) {
			return;		
		}
		«ENDFOR»
    }
}
	
	'''
	
}