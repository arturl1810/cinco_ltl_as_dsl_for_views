package de.jabc.cinco.meta.plugin.pyro.templates.message

import de.jabc.cinco.meta.plugin.pyro.templates.Templateable
import mgl.GraphModel
import java.util.ArrayList
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import java.util.HashMap
import de.jabc.cinco.meta.plugin.pyro.model.ConnectionConstraint
import de.jabc.cinco.meta.plugin.pyro.model.EmbeddingConstraint
import mgl.Type
import de.jabc.cinco.meta.plugin.pyro.utils.ModelParser

class CustomMessageParser implements Templateable{
	
	override create(GraphModel graphModel, ArrayList<StyledNode> nodes, ArrayList<StyledEdge> edges, HashMap<String, ArrayList<StyledNode>> groupedNodes, ArrayList<ConnectionConstraint> validConnections, ArrayList<EmbeddingConstraint> embeddingConstraints, ArrayList<Type> enums)
	'''
package de.ls5.cinco.message;
«IF ModelParser.isCustomeActionAvailable(graphModel)»
import de.ls5.cinco.custom.action.*;
«ENDIF»
import de.ls5.cinco.transformation.api.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by Pyro CINCO Meta Plugin
 */
public class CustomFeatureParser {
    public static JSONObject customFeature(String jsonString,C«graphModel.name.toFirstUpper» c«graphModel.name.toFirstUpper»){
        JSONObject receivedMessage = MessageParser.parse(jsonString);
        String muId = (String) receivedMessage.get("muId");
        JSONArray element = (JSONArray) receivedMessage.get("element");
        «IF ModelParser.isCustomeAction(graphModel)»
        if(receivedMessage.get("name").equals(c«graphModel.name.toFirstUpper».getModelElementContainer().getName())) {
        	«FOR String name:ModelParser.getCustomActionNames(graphModel)»
            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
			if(receivedMessage.get("option").equals(«name.toFirstLower»CustomAction.getName())){
		    if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«graphModel.name.toFirstUpper»)){
		        «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«graphModel.name.toFirstUpper»);
		        return getCustomFeatureResponse(true);
		    }
		    return getCustomFeatureResponse(false);
		}
            «ENDFOR»
        }
        «ENDIF»
        long dywaId = Long.parseLong(""+receivedMessage.get("dywaId"));
        «FOR StyledNode sn:nodes»
        «IF ModelParser.isCustomeAction(sn.modelElement)»
        if(receivedMessage.get("name").equals("«sn.modelElement.name.toFirstUpper»")) {
            C«sn.modelElement.name.toFirstUpper» c«sn.modelElement.name.toFirstUpper» = c«graphModel.name.toFirstUpper».getC«sn.modelElement.name.toFirstUpper»(dywaId);
            if(c«sn.modelElement.name.toFirstUpper» == null){
                return getCustomFeatureResponse(false);
            }
            «FOR String name:ModelParser.getCustomActionNames(sn.modelElement)»
            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
            if(receivedMessage.get("option").equals(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName())){
                if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«sn.modelElement.name.toFirstUpper»)){
                    «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«sn.modelElement.name.toFirstUpper»);
                    return getCustomFeatureResponse(true);
                }
                return getCustomFeatureResponse(false);
            }
            «ENDFOR»
            return getCustomFeatureResponse(false);
        }
        «ENDIF»
        «ENDFOR»
        «FOR StyledEdge sn:edges»
        «IF ModelParser.isCustomeAction(sn.modelElement)»
        if(receivedMessage.get("name").equals("«sn.modelElement.name.toFirstUpper»")) {
            C«sn.modelElement.name.toFirstUpper» c«sn.modelElement.name.toFirstUpper» = c«graphModel.name.toFirstUpper».getC«sn.modelElement.name.toFirstUpper»(dywaId);
            if(c«sn.modelElement.name.toFirstUpper» == null){
                return getCustomFeatureResponse(false);
            }
            «FOR String name:ModelParser.getCustomActionNames(sn.modelElement)»
            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
            if(receivedMessage.get("option").equals(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName())){
                if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«sn.modelElement.name.toFirstUpper»)){
                    «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«sn.modelElement.name.toFirstUpper»);
                    return getCustomFeatureResponse(true);
                }
                return getCustomFeatureResponse(false);
            }
            «ENDFOR»
            return getCustomFeatureResponse(false);
        }
        «ENDIF»
        «ENDFOR»
        
        return getCustomFeatureResponse(false);
    }

    private static JSONObject getResponse() {
        return new JSONObject();
    }

    private static JSONObject getCustomFeatureResponse(boolean valid) {
        JSONObject response = getResponse();
        response.put("valid",valid);
        return response;
    }
}
	

	'''
}