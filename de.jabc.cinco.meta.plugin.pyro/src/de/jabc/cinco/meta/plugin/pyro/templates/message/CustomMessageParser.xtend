package de.jabc.cinco.meta.plugin.pyro.templates.message

import de.jabc.cinco.meta.plugin.pyro.templates.Templateable
import mgl.GraphModel
import java.util.ArrayList
import de.jabc.cinco.meta.plugin.pyro.model.StyledNode
import de.jabc.cinco.meta.plugin.pyro.model.StyledEdge
import java.util.HashMap
import de.jabc.cinco.meta.plugin.pyro.model.ConnectionConstraint
import de.jabc.cinco.meta.plugin.pyro.model.EmbeddingConstraint
import mgl.Type
import de.jabc.cinco.meta.plugin.pyro.utils.ModelParser
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EPackage
import de.jabc.cinco.meta.plugin.pyro.model.TemplateContainer

class CustomMessageParser extends Templateable{
	
	override create(TemplateContainer tc)
	'''
		package de.ls5.cinco.pyro.message.«tc.graphModel.name.toFirstLower»;
		«IF ModelParser.isCustomeActionAvailable(tc.graphModel)»
		import de.ls5.cinco.pyro.custom.action.«tc.graphModel.name.toFirstLower».*;
		«ENDIF»
		import de.ls5.cinco.pyro.transformation.api.«tc.graphModel.name.toFirstLower».*;
		import de.ls5.cinco.pyro.message.MessageParser;
		import org.json.simple.JSONArray;
		import org.json.simple.JSONObject;
		
		import java.util.ArrayList;
		import java.util.List;
		
		/**
		 * Generated by Pyro CINCO Meta Plugin
		 */
		public class CustomFeatureParser {
		    public static JSONObject customFeature(String jsonString,C«tc.graphModel.name.toFirstUpper» c«tc.graphModel.name.toFirstUpper»){
		        JSONObject receivedMessage = MessageParser.parse(jsonString);
		        String muId = (String) receivedMessage.get("muId");
		        JSONArray element = (JSONArray) receivedMessage.get("element");
		        «IF ModelParser.isCustomeAction(tc.graphModel)»
		        if(receivedMessage.get("name").equals(c«tc.graphModel.name.toFirstUpper».getModelElementContainer().getName())) {
		        	«FOR String name:ModelParser.getCustomActionNames(tc.graphModel)»
		            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
					if(receivedMessage.get("option").equals(«name.toFirstLower»CustomAction.getName())){
				    if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«tc.graphModel.name.toFirstUpper»)){
				        «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«tc.graphModel.name.toFirstUpper»);
				        return getCustomFeatureResponse(true);
				    }
				    return getCustomFeatureResponse(false);
				}
		            «ENDFOR»
		        }
		        «ENDIF»
		        long dywaId = Long.parseLong(""+receivedMessage.get("dywaId"));
		        «FOR StyledNode sn:tc.nodes.filter[sn|ModelParser.isCustomeAction(sn.modelElement)]»
			        if(receivedMessage.get("name").equals("«sn.modelElement.name.toFirstUpper»")) {
			            C«sn.modelElement.name.toFirstUpper» c«sn.modelElement.name.toFirstUpper» = c«tc.graphModel.name.toFirstUpper».getC«sn.modelElement.name.toFirstUpper»(dywaId);
			            if(c«sn.modelElement.name.toFirstUpper» == null){
			                return getCustomFeatureResponse(false);
			            }
		            «FOR String name:ModelParser.getCustomActionNames(sn.modelElement)»
			            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
			            if(receivedMessage.get("option").equals(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName())){
			                if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«sn.modelElement.name.toFirstUpper»)){
			                    «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«sn.modelElement.name.toFirstUpper»);
			                    return getCustomFeatureResponse(true);
			                }
			                return getCustomFeatureResponse(false);
			            }
		            «ENDFOR»
			            return getCustomFeatureResponse(false);
			        }
		        «ENDFOR»
		        «FOR StyledEdge sn:tc.edges»
			        «IF ModelParser.isCustomeAction(sn.modelElement)»
				        if(receivedMessage.get("name").equals("«sn.modelElement.name.toFirstUpper»")) {
				            C«sn.modelElement.name.toFirstUpper» c«sn.modelElement.name.toFirstUpper» = c«tc.graphModel.name.toFirstUpper».getC«sn.modelElement.name.toFirstUpper»(dywaId);
				            if(c«sn.modelElement.name.toFirstUpper» == null){
				                return getCustomFeatureResponse(false);
				            }
			            «FOR String name:ModelParser.getCustomActionNames(sn.modelElement)»
				            «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction «ModelParser.getCustomActionName(name).toFirstLower»CustomAction = new «ModelParser.getCustomActionName(name).toFirstUpper»CustomAction();
				            if(receivedMessage.get("option").equals(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.getName())){
				                if(«ModelParser.getCustomActionName(name).toFirstLower»CustomAction.canExecute(c«sn.modelElement.name.toFirstUpper»)){
				                    «ModelParser.getCustomActionName(name).toFirstLower»CustomAction.execute(c«sn.modelElement.name.toFirstUpper»);
				                    return getCustomFeatureResponse(true);
				                }
				                return getCustomFeatureResponse(false);
				            }
			            «ENDFOR»
				            return getCustomFeatureResponse(false);
				        }
			        «ENDIF»
		        «ENDFOR»
		        
		        return getCustomFeatureResponse(false);
		    }
		
		    private static JSONObject getResponse() {
		        return new JSONObject();
		    }
		
		    private static JSONObject getCustomFeatureResponse(boolean valid) {
		        JSONObject response = getResponse();
		        response.put("valid",valid);
		        return response;
		    }
		}
			

	'''
	
}