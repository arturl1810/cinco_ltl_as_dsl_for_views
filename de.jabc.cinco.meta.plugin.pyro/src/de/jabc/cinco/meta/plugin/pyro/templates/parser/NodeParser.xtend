package de.jabc.cinco.meta.plugin.pyro.templates.parser

import de.jabc.cinco.meta.plugin.pyro.model.StyledModelElement
import de.jabc.cinco.meta.plugin.pyro.model.TemplateContainer
import de.jabc.cinco.meta.plugin.pyro.templates.ElementTemplateable
import de.jabc.cinco.meta.plugin.pyro.utils.ModelParser
import mgl.Attribute
import mgl.Node

class NodeParser implements ElementTemplateable {
	
	override create(StyledModelElement sme, TemplateContainer tc)
	'''
		package de.ls5.cinco.pyro.parser.«tc.graphModel.name.toFirstLower»;
		import de.ls5.cinco.pyro.parser.PointParser;
		import de.ls5.dywa.generated.entity.«sme.modelElement.name.toFirstUpper»;
		import de.ls5.cinco.pyro.transformation.api.«tc.graphModel.name.toFirstLower».*;
		import org.json.simple.JSONArray;
		import org.json.simple.JSONObject;
		import de.ls5.dywa.generated.entity.ModelElement;
		«IF ModelParser.isCustomeActionAvailable(tc.graphModel)»
		import de.ls5.cinco.pyro.custom.action.«tc.graphModel.name.toFirstLower».*;
		«ENDIF»
		
		import java.text.MessageFormat;
		
		
		/**
		 * Generated by Pyro CINCO Meta Plugin
		 */
		public class «sme.modelElement.name.toFirstUpper»Parser {
		
		
		    public static JSONObject toJSON(«sme.modelElement.name.toFirstUpper» «sme.modelElement.name.toFirstLower») {
		        JSONObject jsonObject = new JSONObject();
		        jsonObject.put("cinco_id",new Long(«sme.modelElement.name.toFirstLower».getId()));
		        jsonObject.put("position",PointParser.toJSON(«sme.modelElement.name.toFirstLower».getposition()));
		        jsonObject.put("angle",new Double(«sme.modelElement.name.toFirstLower».getangle()));
		        JSONArray «sme.modelElement.name.toFirstLower»Attributes = new JSONArray();
		        
		        //Attributes
		        «FOR Attribute attribute:sme.modelElement.attributes»
		        «AttributeParser.createAttribute(attribute,sme.modelElement.name,tc.enums,tc.graphModel)»
		        «ENDFOR»
		        jsonObject.put("cinco_attrs",«sme.modelElement.name.toFirstLower»Attributes);
		        return jsonObject;
		    }
		    public static String toJSONPreString(«sme.modelElement.name.toFirstUpper» «sme.modelElement.name.toFirstLower») {
		        String jsonString =
		                "var {0} = new joint.shapes.devs.«sme.modelElement.name.toFirstUpper»({1});\n" +
		                "graph.addCells([{0}]);\n";
		                
		        return MessageFormat.format(
		                jsonString,
		                «sme.modelElement.name.toFirstLower».getName(),
		                toJSON(«sme.modelElement.name.toFirstLower»).toJSONString()
		        );
		    }
		    
		    public static String toJSONPostString(«sme.modelElement.name.toFirstUpper» «sme.modelElement.name.toFirstLower») {
		        String jsonString =
		                "resizeElementOnActivate({0},{1},{2});\n";
		    «IF sme.modelElement instanceof Node»
		    
		        return MessageFormat.format(
		                jsonString,
		                «sme.modelElement.name.toFirstLower».getName(),
		                «sme.modelElement.name.toFirstLower».getwidth().toString().replaceAll("\\.", ""),
		            	«sme.modelElement.name.toFirstLower».getheight().toString().replaceAll("\\.", ""),
		                toJSON(«sme.modelElement.name.toFirstLower»).toJSONString()
		        );
		    }
		    «ELSE»
		            jsonString += "{3}";
		            return MessageFormat.format(
		            jsonString,
		            «sme.modelElement.name.toFirstLower».getName(),
		            «sme.modelElement.name.toFirstLower».getwidth().toString().replaceAll("\\.", ""),
		            «sme.modelElement.name.toFirstLower».getheight().toString().replaceAll("\\.", ""),
		            embedingsToJSON(«sme.modelElement.name.toFirstLower»)
		    	);
		
		    }
		
		    public static String embedingsToJSON(«sme.modelElement.name.toFirstUpper» «sme.modelElement.name.toFirstLower») {
		        String jsonString = "";
		        for(ModelElement modelElement:«sme.modelElement.name.toFirstLower».getmodelElements_ModelElement()) {
		            jsonString += «sme.modelElement.name.toFirstLower».getName()+".embed("+modelElement.getName()+");\n";
		        }
		        return jsonString;
		    }
		    «ENDIF»
		
		}
	'''
}