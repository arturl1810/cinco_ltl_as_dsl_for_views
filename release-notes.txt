20150513 - Cinco Release 0.6
- new Cinco Product Definition (CPD) file format that enables branding of CPs
  and more easy merging of multiple MGLs into a single CP
- "Generate Cinco Product" action moved to context menu of CPD file
- support for the simplified export of a stand-alone CP
- new annotation for post-create hooks (@postCreate) that is invoked after a
  node/edge/model is created (example generated by wizard)
- A transformation API is now generated for every Cinco product. It allows one
  to very easily implement model changes (e.g. in custom actions or post-create
  hooks) that are automatically reflected in both the visual representation as
  well as the underlying model (example generated by wizard)
- every model element is now uniquely identifiably, as an ID generated
  automatically
- multiple text shapes can now be used for node layouts
- initial version of the spreadsheet meta plug-in that allows for the
  definition of calculating semantics using Excel or similar tools
- improved expressiveness of cardinality constraints for containers
- new annotation (@palette) to sort the nodes and containers in the palette
  into custom groups (example generated by wizard)

20140925 - Cinco Release 0.5
- advanced copy&paste feature that fully preserves layout
- enhanced cinco wizard that allows for the initialization of various example
  features (containers, prime references, icons, appearance provider, code
  generator, custom actions)
- cinco custom actions (formerly custom features) now possible for context
  menu and doubleclick
- unified file referencing (e.g. for style file, icons): bundle-relative path
  or platform URI
- unified Java class referencing (e.g. for custom action or generatable annotations):
  bundleName + FQ class name (bundle may be omitted when referring to "this bundle")
- added support for generating jABC4 Service Graphs for Cinco Product models.
  This enables code generators, interpreters, and model transformations to be modeled
  within jABC4.
- extended MGL/Style validators and content assist (more errors; more help)
- @icon annotation (node, container, edge) for the create tools in the tool palette
- lots polishing, small features, and bugfixing 

20140813 - Cinco Release 0.4

- possible source and target nodes of edges is now defined at the node's end
  with keywords incomingEdges and outgoingEdges, allowing cardinalities (the
  keywords sourceNode and targetNode have been removed) 
- basic copy&paste features are now generated (not yet preserving some minor
  graphical properties, such as edge bend points and decorator locations)
- added possibility to define appearances "inline" 
- appearances can now be defined for edgeStyle and edge decorators
- adapted annotation syntax to be more like Java: @annotationName(param1, param2, ...)
- renamed @Style annotation to @style
- "decorators {}"-syntax for edges changed to multiple "decorator {}"-blocks
- the .style editor now validates the parameters of the @style annotation
- new @multiLine annotation for attributes
- added predefined edge decorator shapes (ARROW, CIRCLE, DIAMOND, TRIANGLE)
- define CustomFeatures on nodes and containers with @customFeature annotation
- other node types can now be used as attributes
- error/success dialog after "Generate Cinco Product"
- again, many other small features and fixes


20140416 - Cinco Release 0.3

- containers can now contain other containers (thus containableNodes is renamed
  to containableElements)
- containableElements keyword can also be used for the root model
- Selecting edge decorators now shows the correct property view and highlights
  the corresponding edge
â€“ Several methods are generated into the model code, creating a more
  domain-specific API (e.g. typed getters for successors, predecessors, contained
  elements, ...)
- Many other small features and fixes
