<?xml version="1.0" encoding="ISO-8859-1"?>
<model version="2.1">
  <id>67a73b2a-3824-4776-9686-ae1a8aed5282</id>
  <name>GenerateCopyPasteFeatures</name>
  <changecounter>155</changecounter>
  <sib>
    <id>59a427e8-25c5-482c-a32b-a0aa278eb41b</id>
    <name>PutExpression</name>
    <label>LocalPkgName</label>
    <sib-uid>basic-sibs/PutExpression</sib-uid>
    <taxonomy>de.jabc.sib.common.basic.PutExpression</taxonomy>
    <position>39.5,48.0</position>
    <parameter name="resolve">
      <boolean>true</boolean>
    </parameter>
    <parameter name="value">
      <de.metaframe.common.sib.parameter.ContextExpression>
        <ContextExpressionFoundation>
          <expression>${packageName}.graphiti.features</expression>
          <clazz>java.lang.Object</clazz>
          <classMutable>true</classMutable>
        </ContextExpressionFoundation>
      </de.metaframe.common.sib.parameter.ContextExpression>
    </parameter>
    <parameter name="variable">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>localPkgName</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
    <userobject key="ABC$START">
      <boolean>true</boolean>
    </userobject>
  </sib>
  <sib>
    <id>5fb9d5ed-29f7-49c6-885e-d21af9361340</id>
    <name>PutExpression_1</name>
    <label>ClassName</label>
    <sib-uid>basic-sibs/PutExpression</sib-uid>
    <taxonomy>de.jabc.sib.common.basic.PutExpression</taxonomy>
    <position>50.5,168.0</position>
    <parameter name="resolve">
      <boolean>true</boolean>
    </parameter>
    <parameter name="value">
      <de.metaframe.common.sib.parameter.ContextExpression>
        <ContextExpressionFoundation>
          <expression>${graphModelName}CopyFeature</expression>
          <clazz>java.lang.Object</clazz>
          <classMutable>true</classMutable>
        </ContextExpressionFoundation>
      </de.metaframe.common.sib.parameter.ContextExpression>
    </parameter>
    <parameter name="variable">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>className</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <edge>
    <source>59a427e8-25c5-482c-a32b-a0aa278eb41b</source>
    <target>5fb9d5ed-29f7-49c6-885e-d21af9361340</target>
    <point>90.0,75.0</point>
    <point>84.0,209.0</point>
    <branch>default</branch>
  </edge>
  <sib>
    <id>e1354f1f-6e52-44d9-8ccd-716d6ee62744</id>
    <name>RunStringTemplate</name>
    <label>CopyFeature</label>
    <sib-uid>script-sibs/RunStringTemplate</sib-uid>
    <taxonomy>de.jabc.sib.common.script.RunStringTemplate</taxonomy>
    <position>45.0,288.0</position>
    <parameter name="append">
      <boolean>true</boolean>
    </parameter>
    <parameter name="individualVariables">
      <boolean>false</boolean>
    </parameter>
    <parameter name="result">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>copyFeatureContent</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="template">
      <string>package $context.localPkgName$;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import graphmodel.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.transaction.RecordingCommand;
import org.eclipse.emf.transaction.TransactionalEditingDomain;
import org.eclipse.emf.transaction.util.TransactionUtil;
import org.eclipse.graphiti.features.IFeatureProvider;
import org.eclipse.graphiti.features.context.ICopyContext;
import org.eclipse.graphiti.mm.pictograms.PictogramElement;
import org.eclipse.graphiti.ui.features.AbstractCopyFeature;

public class $context.graphModelName$CopyFeature extends AbstractCopyFeature {

	public $context.graphModelName$CopyFeature(IFeatureProvider fp) {
		super(fp);
	}

	@Override
	public void copy(ICopyContext context) {
		PictogramElement[] pes = context.getPictogramElements();
		List&lt;Object&gt; bos = new ArrayList&lt;&gt;();
		List&lt;EObject&gt; subGraphElements = getSubGraph(pes);
		HashMap&lt;ModelElement, ModelElement&gt; copiedNodes = new HashMap&lt;&gt;();
		for (EObject bo : subGraphElements) {
			if (bo instanceof Edge) {
				Edge e = (Edge) bo;
				Edge copy = EcoreUtil.copy(e);

				ModelElement s = copiedNodes.get(e.getSourceElement());
				ModelElement t = copiedNodes.get(e.getTargetElement());
				
				if (s == null)
					s = EcoreUtil.copy(e.getSourceElement());

				
				if (t == null)
					t = EcoreUtil.copy(e.getTargetElement());
				
				copy.setSourceElement(s);
				copy.setTargetElement(t);
				copiedNodes.put(e.getSourceElement(), s);
				copiedNodes.put(e.getTargetElement(), t);
				bos.add(copy);
				bos.add(s);
				bos.add(t);
			}
		}
		for (EObject bo : subGraphElements) {
			if ((bo instanceof Node || bo instanceof Container) &amp;&amp; copiedNodes.get((ModelElement) bo) == null) {
				ModelElement copy = EcoreUtil.copy((ModelElement) bo);
				bos.add(copy);
			}	
		}
		
		putToClipboard(bos.toArray(new Object[bos.size()]));
	}

	@Override
	public boolean canCopy(ICopyContext context) {
		PictogramElement[] pes = context.getPictogramElements();
		if (pes == null || pes.length == 0)
			return false;
		return true;
		
	}

	private List&lt;EObject&gt; getSubGraph(PictogramElement[] pes) {
		ArrayList&lt;EObject&gt; list = new ArrayList&lt;&gt;();
		HashMap&lt;ModelElement, Object&gt; map = new HashMap&lt;&gt;();
		List&lt;Edge&gt; edges = new ArrayList&lt;Edge&gt;();
		for (PictogramElement pe : pes) {
			Object bo = getBusinessObjectForPictogramElement(pe);
			if (bo instanceof Node) {
				Node node = (Node) bo;
				list.add(node);
				map.put(node, true);
				for (Edge e : node.getIncoming())
					edges.add(e);
				for (Edge e : node.getOutgoing())
					edges.add(e);
			}
			
			if (bo instanceof Container) {
				Container container = (Container) bo;
				list.add((EObject) bo);
				map.put(container, true);
				for (Edge e : container.getIncoming())
					edges.add(e);
				for (Edge e : container.getOutgoing())
					edges.add(e);
			}
			
			if (bo instanceof Edge)
				edges.add((Edge) bo);
		}
		
		for (Edge e : edges) {
			Object e1 = map.get(e.getSourceElement());
			Object e2 = map.get(e.getTargetElement());
			if (e1 != null &amp;&amp; e2 != null) {
				if (!list.contains(e))
					list.add(e);
			}
		}
		return list;
	}

}
</string>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <edge>
    <source>5fb9d5ed-29f7-49c6-885e-d21af9361340</source>
    <target>e1354f1f-6e52-44d9-8ccd-716d6ee62744</target>
    <point>90.0,195.0</point>
    <point>85.0,300.0</point>
    <branch>default</branch>
  </edge>
  <sib>
    <id>8aa0a1dd-fd90-4abc-a2e9-ff882536ad38</id>
    <name>RunStringTemplate_1</name>
    <label>PasteFeature</label>
    <sib-uid>script-sibs/RunStringTemplate</sib-uid>
    <taxonomy>de.jabc.sib.common.script.RunStringTemplate</taxonomy>
    <position>43.0,648.0</position>
    <parameter name="append">
      <boolean>true</boolean>
    </parameter>
    <parameter name="individualVariables">
      <boolean>false</boolean>
    </parameter>
    <parameter name="result">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>pasteFeatureContent</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="template">
      <string>package $context.localPkgName$;

import graphmodel.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;

import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.graphiti.features.IAddFeature;
import org.eclipse.graphiti.features.IFeatureProvider;
import org.eclipse.graphiti.features.context.IPasteContext;
import org.eclipse.graphiti.features.context.impl.AddConnectionContext;
import org.eclipse.graphiti.features.context.impl.AddContext;
import org.eclipse.graphiti.mm.pictograms.Anchor;
import org.eclipse.graphiti.mm.pictograms.AnchorContainer;
import org.eclipse.graphiti.mm.pictograms.ContainerShape;
import org.eclipse.graphiti.mm.pictograms.PictogramElement;
import org.eclipse.graphiti.services.Graphiti;
import org.eclipse.graphiti.ui.features.AbstractPasteFeature;

import $context.importPath$.*;

public class $context.graphModelName$PasteFeature extends AbstractPasteFeature {

	private int xFix, yFix;

	public $context.graphModelName$PasteFeature(IFeatureProvider fp) {
		super(fp);
		// TODO Auto-generated constructor stub
	}

	@Override
	public void paste(IPasteContext context) {
		ContainerShape target = (ContainerShape) context.getPictogramElements()[0];
		ContainingElement tmp = (ContainingElement)getBusinessObjectForPictogramElement(target);
		Object[] bos = getFromClipboard();
		HashMap&lt;ModelElement, ModelElement&gt; copiedNodes = new HashMap&lt;&gt;();
		computeCenter(bos);
		for (Object bo : bos) {
			if (bo instanceof Edge) {
				Edge edge = (Edge) bo;
				Edge copy = EcoreUtil.copy(edge);
				
				ModelElement s = copiedNodes.get(edge.getSourceElement());
				ModelElement t = copiedNodes.get(edge.getTargetElement());
				
				if (s == null)
					s = EcoreUtil.copy(edge.getSourceElement());
				
				if (t == null)
					t = EcoreUtil.copy(edge.getTargetElement());
				
				copy.setSourceElement(s);
				copy.setTargetElement(t);
				copiedNodes.put(edge.getSourceElement(), s);
				copiedNodes.put(edge.getTargetElement(), t);
				tmp.getModelElements().add(s);
				tmp.getModelElements().add(t);
				tmp.getModelElements().add((ModelElement) copy);
				
				Anchor sAnchor = addModelElement(context, target, s);
				Anchor tAnchor = addModelElement(context, target, t);
				
				addEdge(context, target, copy, sAnchor, tAnchor);
			}
		}
		for (Object bo : bos) {
			if (canPaste(bo, getBusinessObjectForPictogramElement(target))) {
				if ((bo instanceof Node || bo instanceof Container) &amp;&amp; copiedNodes.get(bo) == null) {
					ModelElement me = (ModelElement) bo;
					ModelElement copy = EcoreUtil.copy(me);
					tmp.getModelElements().add(copy);
					addModelElement(context, target, copy);
				}
			}
		}
	}

	@Override
	public boolean canPaste(IPasteContext context) {
		PictogramElement[] pes = context.getPictogramElements();
		if (pes == null || pes.length != 1) 
			return false;
		Object bo = getBusinessObjectForPictogramElement(pes[0]);
		if (!(bo instanceof $context.graphModelName$) &amp;&amp; !(bo instanceof Container))
			return false;
		
		Object[] bos = getFromClipboard();
		if (bos == null || bos.length == 0)
			return false;
		for (Object o : bos) {
			if (!canPaste(o, bo)) {
				return false;
			}
		}
		return true;
	}

	private Anchor addModelElement(IPasteContext context, ContainerShape target, ModelElement me) {
		List&lt;PictogramElement&gt; pes = Graphiti.getLinkService().getPictogramElements(getDiagram(), me);
		PictogramElement pe = null;
		if (pes != null &amp;&amp; !pes.isEmpty()) {
			pe = pes.get(0);
		}
		
		if (pe instanceof AnchorContainer)
			return ((AnchorContainer) pe).getAnchors().get(0);
		
		int xContext = context.getX();
		int yContext = context.getY();
		
		int xTarget = target.getGraphicsAlgorithm().getX();
		int yTarget = target.getGraphicsAlgorithm().getY();

		AddContext ac = new AddContext();
		ac.setNewObject(me);
		ac.setTargetContainer(target);
		if (me instanceof Node) {
			int x = ((Node) me).getX();
			int y = ((Node) me).getY();
			
			int xNew = xContext + (x - xFix) - xTarget;
			int yNew = yContext + (y - yFix) - yTarget;
			ac.setLocation(xNew, yNew);
		}
		if (me instanceof Container) {
			int x = ((Container) me).getX();
			int y = ((Container) me).getY();
			
			int xNew = xContext + (x - xFix) - xTarget;
			int yNew = yContext + (y - yFix) - yTarget;
			ac.setLocation(xNew, yNew);
		}
		IAddFeature af = getFeatureProvider().getAddFeature(ac);
		if (af != null &amp;&amp; af.canAdd(ac)) {
			pe = af.add(ac);
			if (pe instanceof AnchorContainer) {
				return ((AnchorContainer) pe).getAnchors().get(0);
			}
		}
		return null;
	}
	
	private void addEdge(IPasteContext context, ContainerShape target, Edge edge,
			Anchor sAnchor, Anchor tAnchor) {
		AddConnectionContext acc = new AddConnectionContext(sAnchor, tAnchor);
		acc.setNewObject(edge);
		IAddFeature af = getFeatureProvider().getAddFeature(acc);
		if (af != null &amp;&amp; af.canAdd(acc)) {
			af.add(acc);
		}
	}

	private void computeCenter(Object[] bos) {
		ArrayList&lt;ModelElement&gt; marked = new ArrayList&lt;&gt;();
		for (Object o : bos) {
			if (o instanceof Edge) {
				Edge edge = (Edge) o;
				if (!marked.contains(edge.getSourceElement()))
						marked.add(edge.getSourceElement());
				if (!marked.contains(edge.getTargetElement()))
					marked.add(edge.getTargetElement());
			}
			
			if (o instanceof Node) {
				Node node = (Node) o;
				if (!marked.contains(node))
					marked.add(node);
			}
			
			if (o instanceof Container) {
				Container container = (Container) o;
				if (!marked.contains(container));
					marked.add(container);
			}
		}
		int xSum = 0, ySum = 0;
		for (ModelElement me : marked) {
			if (me instanceof Node) {
				xSum += ((Node) me).getX();
				ySum += ((Node) me).getY();
			}
			if (me instanceof Container) {
				xSum += ((Container) me).getX();
				ySum += ((Container) me).getY();
			}
		}
		xFix = xSum / marked.size();
		yFix = ySum / marked.size();
	}

	private boolean canPaste(Object bo, Object target) {
		$context.pasteContent$
		return false;
	}

}
</string>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <sib>
    <id>5309ab68-80ac-4a7c-9ec0-be9b0ae6d65e</id>
    <name>WriteJavaFile</name>
    <label>WriteCopyFeature</label>
    <sib-uid>genesys-sibs/WriteJavaFile</sib-uid>
    <taxonomy>de.jabc.sib.genesys.WriteJavaFile</taxonomy>
    <position>27.5,408.0</position>
    <parameter name="baseDirectory">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>outletPath</key>
          <scope>GLOBAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="beautify">
      <boolean>false</boolean>
    </parameter>
    <parameter name="beautifyMethod">
      <de.metaframe.common.sib.parameter.ListBox>
        <ListBoxFoundation>
          <list>
            <string>Eclipse</string>
            <string>Jalopy</string>
          </list>
          <selected>0</selected>
        </ListBoxFoundation>
      </de.metaframe.common.sib.parameter.ListBox>
    </parameter>
    <parameter name="className">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>className</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="fileContent">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>copyFeatureContent</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="packageName">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>localPkgName</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <edge>
    <source>e1354f1f-6e52-44d9-8ccd-716d6ee62744</source>
    <target>5309ab68-80ac-4a7c-9ec0-be9b0ae6d65e</target>
    <point>90.0,315.0</point>
    <point>91.0,433.0</point>
    <branch>default</branch>
  </edge>
  <sib>
    <id>9b993eaa-4198-4e0c-935b-27f234bb5373</id>
    <name>PutExpression_2</name>
    <label>ClassName</label>
    <sib-uid>basic-sibs/PutExpression</sib-uid>
    <taxonomy>de.jabc.sib.common.basic.PutExpression</taxonomy>
    <position>50.5,528.0</position>
    <parameter name="resolve">
      <boolean>true</boolean>
    </parameter>
    <parameter name="value">
      <de.metaframe.common.sib.parameter.ContextExpression>
        <ContextExpressionFoundation>
          <expression>${graphModelName}PasteFeature</expression>
          <clazz>java.lang.Object</clazz>
          <classMutable>true</classMutable>
        </ContextExpressionFoundation>
      </de.metaframe.common.sib.parameter.ContextExpression>
    </parameter>
    <parameter name="variable">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>className</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <sib>
    <id>af959c41-0db9-47da-820e-4cb97cab5b39</id>
    <name>WriteJavaFile_1</name>
    <label>WriteJavaFile</label>
    <sib-uid>genesys-sibs/WriteJavaFile</sib-uid>
    <taxonomy>de.jabc.sib.genesys.WriteJavaFile</taxonomy>
    <position>43.0,783.0</position>
    <parameter name="baseDirectory">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>outletPath</key>
          <scope>GLOBAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="beautify">
      <boolean>false</boolean>
    </parameter>
    <parameter name="beautifyMethod">
      <de.metaframe.common.sib.parameter.ListBox>
        <ListBoxFoundation>
          <list>
            <string>Eclipse</string>
            <string>Jalopy</string>
          </list>
          <selected>0</selected>
        </ListBoxFoundation>
      </de.metaframe.common.sib.parameter.ListBox>
    </parameter>
    <parameter name="className">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>className</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="fileContent">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>pasteFeatureContent</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="packageName">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>localPkgName</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <edge>
    <source>5309ab68-80ac-4a7c-9ec0-be9b0ae6d65e</source>
    <target>9b993eaa-4198-4e0c-935b-27f234bb5373</target>
    <point>90.0,435.0</point>
    <point>100.0,531.0</point>
    <branch>default</branch>
  </edge>
  <edge>
    <source>9b993eaa-4198-4e0c-935b-27f234bb5373</source>
    <target>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</target>
    <point>108.0,557.9076923076923</point>
    <point>267.0,655.7538461538462</point>
    <labelposition>500.0,0.0</labelposition>
    <branch>default</branch>
  </edge>
  <edge>
    <source>8aa0a1dd-fd90-4abc-a2e9-ff882536ad38</source>
    <target>af959c41-0db9-47da-820e-4cb97cab5b39</target>
    <point>90.0,660.0</point>
    <point>83.0,764.0</point>
    <branch>default</branch>
  </edge>
  <sib>
    <id>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</id>
    <name>IterateElements</name>
    <label>IterateNodes</label>
    <sib-uid>collection-sibs/IterateElements</sib-uid>
    <taxonomy>de.jabc.sib.common.collection.IterateElements</taxonomy>
    <position>299.5,528.0</position>
    <parameter name="collection">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>nodes</key>
          <scope>GLOBAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="element">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>modelElement</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="iterator">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>iterator</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>error</finalbranches>
    <finalbranches>exit</finalbranches>
    <finalbranches>next</finalbranches>
  </sib>
  <sib>
    <id>c7a9f388-11af-49f4-b686-2513289d8601</id>
    <name>IterateElements_1</name>
    <label>IterateContainer</label>
    <sib-uid>collection-sibs/IterateElements</sib-uid>
    <taxonomy>de.jabc.sib.common.collection.IterateElements</taxonomy>
    <position>483.0,528.0</position>
    <parameter name="collection">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>containers</key>
          <scope>GLOBAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="element">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>modelElement</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="iterator">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>containeriterator</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>error</finalbranches>
    <finalbranches>exit</finalbranches>
    <finalbranches>next</finalbranches>
  </sib>
  <sib>
    <id>b4f20ed1-1e2f-4749-b0ec-28cf10fd36fb</id>
    <name>MacroSIB</name>
    <label>GenerateCheckContainer</label>
    <sib-uid>c0a80801:2d383935393038373037:1172579262297</sib-uid>
    <taxonomy>de.metaframe.jabc.sib.MacroSIB</taxonomy>
    <position>260.5,316.0</position>
    <parameter name="ClearContent">
      <de.metaframe.common.sib.parameter.ContextExpression>
        <ContextExpressionFoundation>
          <expression>${true}</expression>
          <clazz>java.lang.Boolean</clazz>
          <classMutable>false</classMutable>
        </ContextExpressionFoundation>
      </de.metaframe.common.sib.parameter.ContextExpression>
    </parameter>
    <parameter name="ModelElementKey">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>modelElement</key>
          <scope>DECLARED</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
    <userobject key="ABC$GRAPHSIB$MODELID">
      <string>4ac25e32-ae6b-469a-b78c-1764aa97ce4d</string>
    </userobject>
    <userobject key="ABC$GRAPHSIB$MODELNAME">
      <string>GenerateCheckContainer</string>
    </userobject>
  </sib>
  <sib>
    <id>089f251a-81b3-4412-ba06-537e8677d433</id>
    <name>MacroSIB_1</name>
    <label>GenerateCheckContainer</label>
    <sib-uid>c0a80801:2d383935393038373037:1172579262297</sib-uid>
    <taxonomy>de.metaframe.jabc.sib.MacroSIB</taxonomy>
    <position>455.5,316.0</position>
    <parameter name="ClearContent">
      <de.metaframe.common.sib.parameter.ContextExpression>
        <ContextExpressionFoundation>
          <expression>${true}</expression>
          <clazz>java.lang.Boolean</clazz>
          <classMutable>false</classMutable>
        </ContextExpressionFoundation>
      </de.metaframe.common.sib.parameter.ContextExpression>
    </parameter>
    <parameter name="ModelElementKey">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>modelElement</key>
          <scope>DECLARED</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
    <userobject key="ABC$GRAPHSIB$MODELID">
      <string>4ac25e32-ae6b-469a-b78c-1764aa97ce4d</string>
    </userobject>
    <userobject key="ABC$GRAPHSIB$MODELNAME">
      <string>GenerateCheckContainer</string>
    </userobject>
  </sib>
  <edge>
    <source>c7a9f388-11af-49f4-b686-2513289d8601</source>
    <target>089f251a-81b3-4412-ba06-537e8677d433</target>
    <spline/>
    <point>525.0,528.0</point>
    <point>525.0,356.0</point>
    <labelposition>549.4784594408119,1.4085373397061813</labelposition>
    <branch>next</branch>
  </edge>
  <edge>
    <source>089f251a-81b3-4412-ba06-537e8677d433</source>
    <target>6303c061-3cd9-4d1b-8541-8220fdec7b36</target>
    <point>506.8181818181818,356.0</point>
    <point>453.0,409.8</point>
    <labelposition>500.0,0.0</labelposition>
    <branch>default</branch>
  </edge>
  <edge>
    <source>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</source>
    <target>c7a9f388-11af-49f4-b686-2513289d8601</target>
    <point>345.0,555.0</point>
    <point>499.0,551.0</point>
    <branch>exit</branch>
  </edge>
  <edge>
    <source>c7a9f388-11af-49f4-b686-2513289d8601</source>
    <target>8aa0a1dd-fd90-4abc-a2e9-ff882536ad38</target>
    <point>525.0,555.0</point>
    <point>101.0,678.0</point>
    <branch>exit</branch>
  </edge>
  <sib>
    <id>64b170ea-ca16-40c7-a22a-a8bb50df1fda</id>
    <name>RunStringTemplate_2</name>
    <label>PasteContent</label>
    <sib-uid>script-sibs/RunStringTemplate</sib-uid>
    <taxonomy>de.jabc.sib.common.script.RunStringTemplate</taxonomy>
    <position>192.5,423.0</position>
    <parameter name="append">
      <boolean>true</boolean>
    </parameter>
    <parameter name="individualVariables">
      <boolean>false</boolean>
    </parameter>
    <parameter name="result">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>pasteContent</key>
          <scope>LOCAL</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="template">
      <string>if (bo instanceof $context.modelElement.name$) {
	$context.containerCheck$
}

</string>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <sib>
    <id>6303c061-3cd9-4d1b-8541-8220fdec7b36</id>
    <name>RunStringTemplate_3</name>
    <label>PasteContent</label>
    <sib-uid>script-sibs/RunStringTemplate</sib-uid>
    <taxonomy>de.jabc.sib.common.script.RunStringTemplate</taxonomy>
    <position>402.5,423.0</position>
    <parameter name="append">
      <boolean>true</boolean>
    </parameter>
    <parameter name="individualVariables">
      <boolean>false</boolean>
    </parameter>
    <parameter name="result">
      <de.metaframe.jabc.framework.sib.parameter.ContextKey>
        <ContextKeyFoundation>
          <key>pasteContent</key>
          <scope>DECLARED</scope>
          <scopeMutable>true</scopeMutable>
        </ContextKeyFoundation>
      </de.metaframe.jabc.framework.sib.parameter.ContextKey>
    </parameter>
    <parameter name="template">
      <string>if (bo instanceof $context.modelElement.name$) {
	$context.containerCheck$
}

</string>
    </parameter>
    <finalbranches>default</finalbranches>
    <finalbranches>error</finalbranches>
  </sib>
  <edge>
    <source>6303c061-3cd9-4d1b-8541-8220fdec7b36</source>
    <target>c7a9f388-11af-49f4-b686-2513289d8601</target>
    <point>465.0,435.0</point>
    <point>514.0,537.0</point>
    <branch>default</branch>
  </edge>
  <edge>
    <source>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</source>
    <target>b4f20ed1-1e2f-4749-b0ec-28cf10fd36fb</target>
    <point>345.0,555.0</point>
    <point>351.0,353.0</point>
    <branch>next</branch>
  </edge>
  <edge>
    <source>b4f20ed1-1e2f-4749-b0ec-28cf10fd36fb</source>
    <target>64b170ea-ca16-40c7-a22a-a8bb50df1fda</target>
    <point>326.57894736842104,356.0</point>
    <point>258.0,424.54285714285714</point>
    <branch>default</branch>
  </edge>
  <edge>
    <source>64b170ea-ca16-40c7-a22a-a8bb50df1fda</source>
    <target>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</target>
    <point>240.0,450.0</point>
    <point>333.0,535.0</point>
    <branch>default</branch>
  </edge>
  <values/>
  <branch>
    <name>default</name>
    <branch>default</branch>
    <sib>af959c41-0db9-47da-820e-4cb97cab5b39</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>af959c41-0db9-47da-820e-4cb97cab5b39</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>8aa0a1dd-fd90-4abc-a2e9-ff882536ad38</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>9b993eaa-4198-4e0c-935b-27f234bb5373</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>5309ab68-80ac-4a7c-9ec0-be9b0ae6d65e</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>e1354f1f-6e52-44d9-8ccd-716d6ee62744</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>5fb9d5ed-29f7-49c6-885e-d21af9361340</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>59a427e8-25c5-482c-a32b-a0aa278eb41b</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>c7a9f388-11af-49f4-b686-2513289d8601</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>aa92bfe4-ce39-4f48-9ba1-2db17c3b8f9e</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>64b170ea-ca16-40c7-a22a-a8bb50df1fda</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>6303c061-3cd9-4d1b-8541-8220fdec7b36</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>b4f20ed1-1e2f-4749-b0ec-28cf10fd36fb</sib>
  </branch>
  <branch>
    <name>error</name>
    <branch>error</branch>
    <sib>089f251a-81b3-4412-ba06-537e8677d433</sib>
  </branch>
</model>