<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/de.jabc.cinco.meta.core.mgl.model/src-gen" modelPluginID="de.jabc.cinco.meta.core.mgl.model"
    modelName="GraphModel" modelPluginClass="" rootImplementsInterface="" featureMapWrapperInternalInterface=""
    booleanFlagsField="" importerID="org.eclipse.emf.importer.ecore" complianceLevel="8.0"
    copyrightFields="false" language="" operationReflection="true">
  <foreignModel>GraphModel.ecore</foreignModel>
  <genPackages prefix="Graphmodel" resource="XMI" disposableProviderFactory="true"
      contentTypeIdentifier="" ecorePackage="GraphModel.ecore#/" publicationLocation="">
    <genClasses image="false" ecoreClass="GraphModel.ecore#//GraphModel">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference GraphModel.ecore#//GraphModel/internalElement"/>
      <genOperations ecoreOperation="GraphModel.ecore#//GraphModel/getAllNodeTypes"/>
      <genOperations ecoreOperation="GraphModel.ecore#//GraphModel/getInternalContainerElement"
          body="return getInternalElement();"/>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//Node">
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getSuccessors" body="EList&lt;graphmodel.internal.InternalNode> iSucc= ((graphmodel.internal.InternalNode) this.getInternalElement()).getSuccessors();&#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;java.util.List&lt;M> collect = iSucc.stream().map(iNode -> (M) iNode.getElement()).collect(java.util.stream.Collectors.toList());&#xA;EList&lt;M> successors = new org.eclipse.emf.common.util.BasicEList&lt;M>(collect);&#xA;return successors;">
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getSuccessors/M"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getSuccessors.1" body="@SuppressWarnings(&quot;all&quot;)&#xA;java.util.List&lt;T> successors =(java.util.List&lt;T>) ((graphmodel.internal.InternalNode)this.getInternalElement()).&#xA;&#x9;&#x9;getSuccessors().stream().&#xA;&#x9;&#x9;&#x9;map(me -> me.getElement()).&#xA;&#x9;&#x9;&#x9;&#x9;filter(me -> clazz.isAssignableFrom(((Node)me).getClass())).&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;collect(java.util.stream.Collectors.toList());&#xA;&#x9;&#x9;&#xA;EList&lt;T> retval = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;retval.addAll(successors);&#xA;return retval;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/getSuccessors.1/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getSuccessors.1/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getPredecessors" body="EList&lt;graphmodel.internal.InternalNode> iSucc= ((graphmodel.internal.InternalNode) this.getInternalElement()).getPredecessors();&#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;java.util.List&lt;M> collect = iSucc.stream().map(iNode -> (M) iNode.getElement()).collect(java.util.stream.Collectors.toList());&#xA;EList&lt;M> successors = new org.eclipse.emf.common.util.BasicEList&lt;M>(collect);&#xA;return successors;">
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getPredecessors/M"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getPredecessors.1" body="@SuppressWarnings(&quot;all&quot;)&#xA;java.util.List&lt;T> successors =(java.util.List&lt;T>) ((graphmodel.internal.InternalNode)this.getInternalElement()).&#xA;&#x9;&#x9;getPredecessors().stream().&#xA;&#x9;&#x9;&#x9;map(me -> me.getElement()).&#xA;&#x9;&#x9;&#x9;&#x9;filter(me -> clazz.isAssignableFrom(((Node)me).getClass())).&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;collect(java.util.stream.Collectors.toList());&#xA;&#x9;&#x9;&#xA;EList&lt;T> retval = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;retval.addAll(successors);&#xA;return retval;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/getPredecessors.1/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getPredecessors.1/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getIncoming" body="java.util.List&lt;T> it = ((graphmodel.internal.InternalNode) getInternalElement()).getIncoming().stream()&#xA;&#x9;&#x9;&#x9;&#x9;.filter(iNode -> clazz.isInstance(iNode.getElement())).map(iNode -> clazz.cast(iNode.getElement()))&#xA;&#x9;&#x9;&#x9;&#x9;.collect(java.util.stream.Collectors.toList());&#xA;&#x9;&#x9;org.eclipse.emf.common.util.BasicEList&lt;T> bl = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;bl.addAll(it);&#xA;&#x9;&#x9;return bl;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/getIncoming/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getIncoming/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getOutgoing" body="java.util.List&lt;T> it = ((graphmodel.internal.InternalNode) getInternalElement()).getOutgoing().stream()&#xA;&#x9;&#x9;&#x9;&#x9;.filter(iNode -> clazz.isInstance(iNode.getElement())).map(iNode -> clazz.cast(iNode.getElement()))&#xA;&#x9;&#x9;&#x9;&#x9;.collect(java.util.stream.Collectors.toList());&#xA;&#x9;&#x9;org.eclipse.emf.common.util.BasicEList&lt;T> bl = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;bl.addAll(it);&#xA;&#x9;&#x9;return bl;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/getOutgoing/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/getOutgoing/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/canConnect" body="return canStart(with.getClass())&amp;&amp; to.canEnd(with.getClass());">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canConnect/with"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canConnect/to"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getOutgoingConstraints"
          body="return ((graphmodel.internal.InternalNode)getInternalElement()).getOutgoingConstraints();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getIncomingConstraints"
          body="return ((graphmodel.internal.InternalNode)getInternalElement()).getIncomingConstraints();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/canStart" body="return ((graphmodel.internal.InternalNode)getInternalElement()).canStart(edgeType);">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canStart/edgeType"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/canEnd" body="return ((graphmodel.internal.InternalNode)getInternalElement()).canEnd(edgeType);">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canEnd/edgeType"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getIncoming.1" body="return getIncoming(graphmodel.Edge.class);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getOutgoing.1" body="return getOutgoing(graphmodel.Edge.class);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/move" body="transact(&quot;Move&quot;, () -> {&#xA;&#x9;int deltaX = x - ((graphmodel.internal.InternalNode)this.getInternalElement()).getX();&#xA;&#x9;int deltaY = y - ((graphmodel.internal.InternalNode)this.getInternalElement()).getY();&#xA;&#x9;((graphmodel.internal.InternalNode)getInternalElement()).setX(x);&#xA;&#x9;((graphmodel.internal.InternalNode)getInternalElement()).setY(y);&#xA;&#x9;postMove(getContainer(), getContainer(), x,y,deltaX, deltaY);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/move/x"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/move/y"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/resize">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/resize/width"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/resize/height"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/postMove">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/source"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/target"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/x"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/y"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/deltaX"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postMove/deltaY"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/delete" body="preDelete();&#xA;Runnable postDeleteFunction = getPostDeleteFunction();&#xA;java.util.HashSet&lt;graphmodel.Edge> allEdges = new java.util.HashSet&lt;>();&#xA;allEdges.addAll(getIncoming());&#xA;allEdges.addAll(getOutgoing());&#xA;for (graphmodel.Edge edge : allEdges)&#xA;&#x9;edge.delete();&#xA;if (getInternalElement() == null) return; //deleting edges might have hook-deleted myself&#xA;transact(&quot;Delete&quot;, () -> {&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this.getInternalElement());&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this);&#xA;});&#xA;postDeleteFunction.run();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getPostDeleteFunction"
          body="return () -> {};"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/preDelete" body=""/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/canMoveTo" body="return targetContainer.canContain(this.getClass());">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canMoveTo/targetContainer"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/moveTo" body="transact(&quot;Set width&quot;, () -> {&#xA;&#x9;int deltaX = x - ((graphmodel.internal.InternalNode)this.getInternalElement()).getX();&#xA;&#x9;int deltaY = y - ((graphmodel.internal.InternalNode)this.getInternalElement()).getY();&#xA;&#x9;s_moveTo(targetContainer, x, y);&#xA;&#x9;targetContainer.getInternalContainerElement().getModelElements().add(this.getInternalElement());&#xA;&#x9;((graphmodel.internal.InternalNode)getInternalElement()).setX(x);&#xA;&#x9;((graphmodel.internal.InternalNode)getInternalElement()).setY(y);&#xA;&#x9;postMove(getContainer(), getContainer(), x,y,deltaX, deltaY);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/moveTo/targetContainer"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/moveTo/x"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/moveTo/y"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/canClone" body="return targetContainer.canContain(this.getClass());">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/canClone/targetContainer"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/clone" body="graphmodel.internal.InternalNode copy = (graphmodel.internal.InternalNode) org.eclipse.emf.ecore.util.EcoreUtil.copy(this.getInternalElement());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy, getInternalElement().getId());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy.getElement(), getId());&#xA;targetContainer.getInternalContainerElement().getModelElements().add(copy);&#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;T t = (T) copy.getElement();&#xA;return t;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/clone/targetContainer"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/clone/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getX" body="return ((graphmodel.internal.InternalNode) getInternalElement()).getX();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getY" body="return ((graphmodel.internal.InternalNode) getInternalElement()).getY();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getWidth" body="return ((graphmodel.internal.InternalNode) getInternalElement()).getWidth();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getHeight" body="return ((graphmodel.internal.InternalNode) getInternalElement()).getHeight();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/copy" body="graphmodel.internal.InternalNode copy = (graphmodel.internal.InternalNode) org.eclipse.emf.ecore.util.EcoreUtil.copy(this.getInternalElement());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy, org.eclipse.emf.ecore.util.EcoreUtil.generateUUID());&#xA;targetContainer.getInternalContainerElement().getModelElements().add(copy);&#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;T t = (T) copy.getElement();&#xA;return t;">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/copy/targetContainer"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Node/copy/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/setX" body="transact(&quot;Set x&quot;, () -> {&#xA;((graphmodel.internal.InternalNode) getInternalElement()).setX(x);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/setX/x"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/setY" body="transact(&quot;Set Y&quot;, () -> {&#xA;((graphmodel.internal.InternalNode) getInternalElement()).setY(y);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/setY/y"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/setWidth" body="transact(&quot;Set width&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalNode) getInternalElement()).setWidth(width);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/setWidth/width"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/setHeight" body="transact(&quot;Set height&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalNode) getInternalElement()).setHeight(height);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/setHeight/height"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/postResize" body="">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postResize/modelElement"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postResize/direction"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postResize/width"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/postResize/height"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/getLayer" body="return getContainer().getModelElements().indexOf(this);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Node/s_moveTo" body="">
        <genParameters ecoreParameter="GraphModel.ecore#//Node/s_moveTo/targetContainer"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/s_moveTo/x"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Node/s_moveTo/y"/>
      </genOperations>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//Edge">
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/getSourceElement" body="return ((graphmodel.internal.InternalEdge)getInternalElement()).getSourceElement();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/getTargetElement" body="return ((graphmodel.internal.InternalEdge)getInternalElement()).getTargetElement();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/setSourceElement" body="transact(&quot;Set Source&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalEdge)getInternalElement()).setSourceElement(sourceElement);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/setSourceElement/sourceElement"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/setTargetElement" body="transact(&quot;Set Target&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalEdge)getInternalElement()).setTargetElement(targetElement);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/setTargetElement/targetElement"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/getPostDeleteFunction"
          body="return () -> {};"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/preDelete" body=""/>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/delete" body="preDelete();&#xA;Runnable postDeleteFunction = getPostDeleteFunction();&#xA;transact(&quot;Delete&quot;, () -> {&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this.getInternalElement());&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this);&#xA;});&#xA;postDeleteFunction.run();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/canClone" body="return source.canStart(this.getClass()) &amp;&amp; target.canEnd(this.getClass());">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/canClone/source"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/canClone/target"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/clone" body="graphmodel.internal.InternalEdge copy = (graphmodel.internal.InternalEdge) org.eclipse.emf.ecore.util.EcoreUtil.copy(this.getInternalElement());&#xA;copy.set_sourceElement((graphmodel.internal.InternalNode) source.getInternalElement());&#xA;copy.set_targetElement((graphmodel.internal.InternalNode) target.getInternalElement());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy, getInternalElement().getId());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy.getElement(), getId());&#xA;org.eclipse.emf.ecore.EObject container = source.getContainer().getInternalContainerElement();&#xA;while (container != null &amp;&amp; !org.eclipse.emf.ecore.util.EcoreUtil.isAncestor(container, target)) {&#xA;&#x9;container = container.eContainer();&#xA;}&#xA;if (container != null) {&#xA;&#x9;((graphmodel.internal.InternalModelElementContainer) container).getModelElements().add(copy);&#xA;} else {&#xA;&#x9;container = target.getContainer().getInternalContainerElement();&#xA;&#x9;while (container != null &amp;&amp; !org.eclipse.emf.ecore.util.EcoreUtil.isAncestor(container, source)) {&#xA;&#x9;&#x9;container = container.eContainer();&#xA;&#x9;}&#xA;&#x9;if (container != null) {&#xA;&#x9;&#x9;((graphmodel.internal.InternalModelElementContainer) container).getModelElements().add(copy);&#xA;&#x9;} else {&#xA;&#x9;&#x9;source.getRootElement().getInternalContainerElement().getModelElements().add(copy);&#xA;&#x9;}&#xA;} &#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;T t = (T) copy.getElement();&#xA;return t;">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/clone/source"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/clone/target"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Edge/clone/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/reconnectSource" body="transact(&quot;Reconnect source&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalEdge)getInternalElement()).setSourceElement(sourceElement);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/reconnectSource/sourceElement"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/reconnectTarget" body="transact(&quot;Reconnect target&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalEdge)getInternalElement()).setTargetElement(targetElement);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/reconnectTarget/targetElement"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/copy" body="Edge copy = this.clone(source, target);&#xA;org.eclipse.emf.ecore.util.EcoreUtil.setID(copy, org.eclipse.emf.ecore.util.EcoreUtil.generateUUID());&#xA;@SuppressWarnings(&quot;unchecked&quot;)&#xA;T t = (T) copy;&#xA;return t;">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/copy/source"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/copy/target"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//Edge/copy/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//Edge/addBendpoint" body="transact(&quot;Add Bendpoint&quot;, () -> {&#xA;&#x9;((graphmodel.internal.InternalEdge) this.getInternalElement()).addBendpoint(x,y);&#xA;});">
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/addBendpoint/x"/>
        <genParameters ecoreParameter="GraphModel.ecore#//Edge/addBendpoint/y"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="GraphModel.ecore#//Container">
      <genOperations ecoreOperation="GraphModel.ecore#//Container/getInternalContainerElement"
          body="return (InternalModelElementContainer)getInternalElement();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Container/delete" body="preDelete();&#xA;Runnable postDeleteFunction = getPostDeleteFunction();&#xA;for (graphmodel.Node child : getAllNodes())&#xA;&#x9;child.delete();&#xA;if (getInternalElement() == null) return; //deleting children might have hook-deleted myself&#xA;java.util.HashSet&lt;graphmodel.Edge> allEdges = new java.util.HashSet&lt;>();&#xA;allEdges.addAll(getIncoming());&#xA;allEdges.addAll(getOutgoing());&#xA;for (graphmodel.Edge edge : allEdges)&#xA;&#x9;edge.delete();&#xA;if (getInternalElement() == null) return; //deleting edges might have hook-deleted myself&#xA;transact(&quot;Delete&quot;, () -> {&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this.getInternalElement());&#xA;&#x9;org.eclipse.emf.ecore.util.EcoreUtil.delete(this);&#xA;});&#xA;postDeleteFunction.run();"/>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//ModelElement">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference GraphModel.ecore#//ModelElement/internalElement"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElement/getContainer"
          body="return getInternalElement().getContainer().getContainerElement();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElement/getRootElement"
          body="return getInternalElement().getRootElement().getElement();"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElement/highlight" body=""/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElement/update" body=""/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElement/updateGraphModel"
          body="this.getRootElement().updateModelElements();"/>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//ModelElementContainer">
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getModelElements"
          body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(ModelElement e: this.getModelElements()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
        <genParameters ecoreParameter="GraphModel.ecore#//ModelElementContainer/getModelElements/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//ModelElementContainer/getModelElements/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getAllNodes"
          body="return getModelElements(Node.class);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getAllEdges"
          body="return getModelElements(graphmodel.Edge.class);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getAllContainers"
          body="return getModelElements(graphmodel.Container.class);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/canContain"
          body="return getInternalContainerElement().canContain(nodes);&#xA;">
        <genParameters ecoreParameter="GraphModel.ecore#//ModelElementContainer/canContain/nodes"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/canContain.1"
          body="return getInternalContainerElement().canContain(node);&#xA;">
        <genParameters ecoreParameter="GraphModel.ecore#//ModelElementContainer/canContain.1/node"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getContainableTypes"
          body="graphmodel.GraphModel rootGraphModel = null;&#xA;&#x9;&#x9;if(this instanceof graphmodel.GraphModel){&#xA;&#x9;&#x9;&#x9;rootGraphModel = (graphmodel.GraphModel) this;&#xA;&#x9;&#x9;}else if(this instanceof graphmodel.Container){&#xA;&#x9;&#x9;&#x9;rootGraphModel = ((graphmodel.Container)this).getRootElement();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if(getInternalContainerElement().getContainmentConstraints().size()>0){&#xA;&#x9;&#x9;&#x9;return new org.eclipse.emf.common.util.BasicEList&lt;Class&lt;? extends Node>>(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rootGraphModel.getAllNodeTypes().stream().filter(n -> canContain(n)).collect(java.util.stream.Collectors.toList()));&#xA;&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;return rootGraphModel.getAllNodeTypes();&#xA;&#x9;&#x9;}"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getModelElements.1"
          body="org.eclipse.emf.common.util.BasicEList&lt;ModelElement> bel = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xA;&#x9;&#x9;bel.addAll(getInternalContainerElement().getModelElements().stream().map(me -> me.getElement()).collect(java.util.stream.Collectors.toList()));&#xA;&#x9;&#x9;return bel;"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getInternalContainerElement"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getEdges"
          body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(ModelElement e: this.getModelElements()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
        <genParameters ecoreParameter="GraphModel.ecore#//ModelElementContainer/getEdges/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//ModelElementContainer/getEdges/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getNodes"
          body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(ModelElement e: this.getModelElements()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
        <genParameters ecoreParameter="GraphModel.ecore#//ModelElementContainer/getNodes/clazz"/>
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//ModelElementContainer/getNodes/T"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/updateModelElements"
          body="for (ModelElement me : getModelElements()) {&#xA;&#x9;me.update();&#xA;&#x9;if (me instanceof ModelElementContainer)&#xA;&#x9;&#x9;((ModelElementContainer) me).updateModelElements();&#xA;}"/>
      <genOperations ecoreOperation="GraphModel.ecore#//ModelElementContainer/getNodes.1"
          body="return (EList&lt;T>)getNodes(Node.class);">
        <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//ModelElementContainer/getNodes.1/T"/>
      </genOperations>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//Parameter">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//Parameter/name"/>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//IdentifiableElement">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//IdentifiableElement/id"/>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/equals"
          body="return obj != null &amp;&amp; ((obj == this) || obj instanceof graphmodel.IdentifiableElement&#xA;&#x9;&#x9;&#x9;&#x9;&amp;&amp; ((graphmodel.IdentifiableElement) obj).getId() == this.getId()&#xA;&#x9;&#x9;&#x9;&#x9;&amp;&amp; obj.getClass().getName().equals(this.getClass().getName()));">
        <genParameters ecoreParameter="GraphModel.ecore#//IdentifiableElement/equals/obj"/>
      </genOperations>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/hashCode"
          body="return java.util.Objects.hash(getId(),getClass().getName());"/>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/save"
          body="try {&#xA;&#x9;this.eResource().save(null);&#xA;&#x9;postSave();&#xA;} catch (java.io.IOException e) {&#xA;&#x9;e.printStackTrace();&#xA;}"/>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/getInternalElement"/>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/postSave"
          body=""/>
      <genOperations ecoreOperation="GraphModel.ecore#//IdentifiableElement/transact"
          body="org.eclipse.emf.transaction.TransactionalEditingDomain dom;&#xA;org.eclipse.emf.transaction.TransactionalEditingDomain.Factory factory = org.eclipse.emf.transaction.TransactionalEditingDomain.Factory.INSTANCE;&#xA;org.eclipse.emf.ecore.resource.Resource res = getInternalElement().eResource();&#xA;if (res == null)&#xA;&#x9;dom = factory.createEditingDomain();&#xA;else dom = org.eclipse.emf.transaction.util.TransactionUtil.getEditingDomain(res);&#xA;if (dom == null)&#x9;&#xA;&#x9;if (res.getResourceSet() != null)&#xA;&#x9;&#x9;dom = factory.createEditingDomain(res.getResourceSet());&#xA;&#x9;else&#xA;&#x9;&#x9;dom = factory.createEditingDomain();&#xA;if (dom != null) {&#xA;&#x9;dom.getCommandStack().execute(new org.eclipse.emf.transaction.RecordingCommand(dom, label) {&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;@Override&#xA;&#x9;&#x9;protected void doExecute() {&#xA;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;runnable.run();&#xA;&#x9;&#x9;&#x9;} catch (Exception e) {&#xA;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;});&#xA;}">
        <genParameters ecoreParameter="GraphModel.ecore#//IdentifiableElement/transact/label"/>
        <genParameters ecoreParameter="GraphModel.ecore#//IdentifiableElement/transact/runnable"/>
      </genOperations>
    </genClasses>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//ContainmentConstraint"/>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//ConnectionConstraint"/>
    <genClasses image="false" ecoreClass="GraphModel.ecore#//Type">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference GraphModel.ecore#//Type/internalElement"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Type/delete" body="preDelete();&#xA;org.eclipse.emf.ecore.util.EcoreUtil.delete(this.getInternalElement());&#xA;org.eclipse.emf.ecore.util.EcoreUtil.delete(this);"/>
      <genOperations ecoreOperation="GraphModel.ecore#//Type/preDelete" body=""/>
    </genClasses>
    <genClasses ecoreClass="GraphModel.ecore#//Runnable"/>
    <nestedGenPackages prefix="Internal" basePackage="graphmodel" disposableProviderFactory="true"
        ecorePackage="GraphModel.ecore#//internal">
      <genClasses ecoreClass="GraphModel.ecore#//internal/InternalNode">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/InternalNode/x"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/InternalNode/y"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/InternalNode/height"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/InternalNode/width"/>
        <genFeatures notify="false" createChild="false" propertySortChoices="true"
            ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalNode/incoming"/>
        <genFeatures notify="false" createChild="false" propertySortChoices="true"
            ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalNode/outgoing"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getSuccessors"
            body="@SuppressWarnings(&quot;unchecked&quot;)&#xA;EList&lt;M> m = (EList&lt;M>) getSuccessors(InternalNode.class);&#xA;return m;">
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getSuccessors/M"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getSuccessors.1"
            body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;if(clazz!=null){&#xA;&#x9;for(InternalEdge e: this.getOutgoing()){&#xA;&#x9;&#x9;if(clazz.isInstance(e.get_targetElement())){&#xA;&#x9;&#x9;&#x9;list.add(clazz.cast(e.get_targetElement()));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}else{&#xA;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/getSuccessors.1/clazz"/>
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getSuccessors.1/T"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getPredecessors"
            body="@SuppressWarnings(&quot;unchecked&quot;)&#xA;EList&lt;M> m = (EList&lt;M>) getPredecessors(InternalNode.class);&#xA;return m;">
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getPredecessors/M"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getPredecessors.1"
            body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;if(clazz!=null){&#xA;&#x9;for(InternalEdge e: this.getIncoming()){&#xA;&#x9;&#x9;if(clazz.isInstance(e.get_sourceElement())){&#xA;&#x9;&#x9;&#x9;list.add(clazz.cast(e.get_sourceElement()));&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}else{&#xA;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/getPredecessors.1/clazz"/>
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getPredecessors.1/T"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getIncoming"
            body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(InternalEdge e: this.getIncoming()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/getIncoming/clazz"/>
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getIncoming/T"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getOutgoing"
            body="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(InternalEdge e: this.getOutgoing()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/getOutgoing/clazz"/>
          <genTypeParameters ecoreTypeParameter="GraphModel.ecore#//internal/InternalNode/getOutgoing/T"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/canConnect"
            body="return canStart(with.getClass())&amp;&amp; to.canEnd(with.getClass());">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/canConnect/with"/>
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/canConnect/to"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getOutgoingConstraints"
            body="return new org.eclipse.emf.common.util.BasicEList&lt;ConnectionConstraint>();"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/getIncomingConstraints"
            body="return new org.eclipse.emf.common.util.BasicEList&lt;ConnectionConstraint>();"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/canStart"
            body="EList&lt;ConnectionConstraint> outConstraints = getOutgoingConstraints();&#xA;&#x9;&#x9;long constraintCount = outConstraints.stream().filter(c -> c.isInEdges(edgeType)).count();&#xA;&#x9;&#x9;return constraintCount>0&amp;&amp;outConstraints.stream().filter(c -> c.isInEdges(edgeType)).allMatch(c -> c.canConnect(((Node)this.getElement()),edgeType));">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/canStart/edgeType"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalNode/canEnd"
            body="EList&lt;ConnectionConstraint> inConstraints = getIncomingConstraints();&#xA;&#x9;&#x9;long constraintCount = inConstraints.stream().filter(c -> c.isInEdges(edgeType)).count();&#xA;&#x9;&#x9;return constraintCount>0&amp;&amp;inConstraints.stream().filter(c -> c.isInEdges(edgeType)).allMatch(c -> c.canConnect(((Node)this.getElement()),edgeType));">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalNode/canEnd/edgeType"/>
        </genOperations>
      </genClasses>
      <genClasses ecoreClass="GraphModel.ecore#//internal/InternalEdge">
        <genFeatures notify="false" createChild="false" propertySortChoices="true"
            ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalEdge/_sourceElement"/>
        <genFeatures notify="false" createChild="false" propertySortChoices="true"
            ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalEdge/_targetElement"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalEdge/bendpoints"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalEdge/decorators"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalEdge/getSourceElement"
            body="return (Node)get_sourceElement().getElement();"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalEdge/getTargetElement"
            body="return  (Node)get_targetElement().getElement();"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalEdge/setSourceElement"
            body="set_sourceElement((InternalNode)sourceElement.getInternalElement());&#xA;">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalEdge/setSourceElement/sourceElement"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalEdge/setTargetElement"
            body="set_targetElement((InternalNode)targetElement.getInternalElement());&#xA;">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalEdge/setTargetElement/targetElement"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalEdge/addBendpoint"
            body="_Point p = graphmodel.internal.InternalFactory.eINSTANCE.create_Point();&#xA;p.setX(x);&#xA;p.setY(y);&#xA;this.getBendpoints().add(p);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalEdge/addBendpoint/x"/>
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalEdge/addBendpoint/y"/>
        </genOperations>
      </genClasses>
      <genClasses ecoreClass="GraphModel.ecore#//internal/InternalContainer">
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalContainer/getContainerElement"
            body="return (ModelElementContainer) this.getElement();&#xA;"/>
      </genClasses>
      <genClasses image="false" ecoreClass="GraphModel.ecore#//internal/InternalModelElementContainer">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalModelElementContainer/modelElements"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElementContainer/getContainerElement"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElementContainer/canContain"
            body="if (nodes != null &amp;&amp; nodes.size() > 0 &amp;&amp; getContainmentConstraints().size() > 0) {&#xA;boolean canContain = true;&#xA;&#xA;for (int i = 1; i &lt;= nodes.size(); i++) {&#xA;&#x9;final java.util.List&lt;Class&lt;? extends Node>> subNodes = nodes.subList(i, nodes.size());&#xA;&#x9;Class&lt;? extends Node> currentNode = nodes.get(i - 1);&#xA;&#x9;long constraintCount = getContainmentConstraints().stream().filter(c -> c.isInTypes(currentNode)).count();&#xA;&#x9;canContain &amp;= constraintCount != 0 &amp;&amp; getContainmentConstraints().stream().filter(c -> c.isInTypes(currentNode)).allMatch(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(c -> !c.violationAfterInsert(currentNode, subNodes, this.getContainerElement())));&#xA;&#x9;}&#xA;&#x9;return canContain;&#xA;}&#xA;return true;">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalModelElementContainer/canContain/nodes"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElementContainer/canContain.1"
            body="EList&lt;Class&lt;? extends Node>> list = new org.eclipse.emf.common.util.BasicEList&lt;Class&lt;? extends Node>>();&#xA;&#x9;&#x9;list.add(node);&#xA;&#x9;&#x9;return canContain(list);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalModelElementContainer/canContain.1/node"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElementContainer/getContainmentConstraints"
            body=" org.eclipse.emf.common.util.BasicEList&lt;de.jabc.cinco.meta.core.mgl.model.constraints.ContainmentConstraint>constraints = &#xA;&#x9;&#x9;            new org.eclipse.emf.common.util.BasicEList&lt;de.jabc.cinco.meta.core.mgl.model.constraints.ContainmentConstraint>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return constraints;"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElementContainer/canContainNodes"
            body="EList&lt;Class&lt;? extends Node>> nodeClasses = new org.eclipse.emf.common.util.BasicEList&lt;>();&#xA;for (Node n : nodes) {&#xA;&#x9;nodeClasses.add(n.getClass());&#xA;}&#xA;return canContain(nodeClasses);">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalModelElementContainer/canContainNodes/nodes"/>
        </genOperations>
      </genClasses>
      <genClasses ecoreClass="GraphModel.ecore#//internal/InternalModelElement">
        <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalModelElement/container"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalModelElement/element"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalModelElement/getRootElement"
            body="InternalModelElementContainer container = this.getContainer();&#xA;&#x9;&#x9;&#x9;&#x9;if(container!=null){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;while(container!=null &amp;&amp; !(container instanceof InternalGraphModel))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;container= ((InternalModelElement)container).getContainer();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if(container!=null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;return (InternalGraphModel)container;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;return null;"/>
      </genClasses>
      <genClasses image="false" ecoreClass="GraphModel.ecore#//internal/InternalGraphModel">
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalGraphModel/element"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalGraphModel/getContainerElement"
            body="return this.getElement();"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalGraphModel/getRootElement"
            body="return this;"/>
      </genClasses>
      <genClasses ecoreClass="GraphModel.ecore#//internal/_Point">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/_Point/x"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/_Point/y"/>
      </genClasses>
      <genClasses ecoreClass="GraphModel.ecore#//internal/_Decoration">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/_Decoration/nameHint"/>
        <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/_Decoration/locationShift"/>
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/_Decoration/location"/>
      </genClasses>
      <genClasses image="false" ecoreClass="GraphModel.ecore#//internal/InternalIdentifiableElement">
        <genFeatures createChild="false" ecoreFeature="ecore:EAttribute GraphModel.ecore#//internal/InternalIdentifiableElement/id"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalIdentifiableElement/equals"
            body="return obj != null &amp;&amp; ((obj == this) || obj instanceof graphmodel.IdentifiableElement&#xA;&#x9;&#x9;&#x9;&#x9;&amp;&amp; ((graphmodel.IdentifiableElement) obj).getId() == this.getId()&#xA;&#x9;&#x9;&#x9;&#x9;&amp;&amp; obj.getClass().getName().equals(this.getClass().getName()));">
          <genParameters ecoreParameter="GraphModel.ecore#//internal/InternalIdentifiableElement/equals/obj"/>
        </genOperations>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalIdentifiableElement/hashCode"
            body="return java.util.Objects.hash(getId(),getClass().getName());"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalIdentifiableElement/save"
            body="try {&#xA;&#x9;this.eResource().save(null);&#xA;} catch (java.io.IOException e) {&#xA;&#x9;e.printStackTrace();&#xA;}"/>
        <genOperations ecoreOperation="GraphModel.ecore#//internal/InternalIdentifiableElement/getElement"/>
      </genClasses>
      <genClasses image="false" ecoreClass="GraphModel.ecore#//internal/InternalType">
        <genFeatures createChild="false" ecoreFeature="ecore:EReference GraphModel.ecore#//internal/InternalType/element"/>
      </genClasses>
    </nestedGenPackages>
  </genPackages>
</genmodel:GenModel>
