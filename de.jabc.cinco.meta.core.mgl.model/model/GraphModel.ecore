<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="graphmodel" nsURI="http://www.jabc.de/cinco/gdl/graphmodel"
    nsPrefix="graphmodel">
  <eClassifiers xsi:type="ecore:EClass" name="GraphModel" abstract="true" interface="true"
      eSuperTypes="#//ModelElementContainer">
    <eOperations name="getAllNodeTypes" upperBound="-1">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
        <eTypeArguments/>
      </eGenericType>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Node" abstract="true" interface="true"
      eSuperTypes="#//ModelElement">
    <eOperations name="getSuccessors" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return new org.eclipse.emf.common.util.BasicEList&lt;M>();&#xA;&#x9;&#x9;"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getSuccessors/M"/>
      <eTypeParameters name="M">
        <eBounds eClassifier="#//Node"/>
      </eTypeParameters>
    </eOperations>
    <eOperations name="getSuccessors" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(Edge e: this.getOutgoing()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e.getTargetElement())){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e.getTargetElement()));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getSuccessors.1/T"/>
      <eTypeParameters name="T">
        <eBounds eClassifier="#//Node"/>
      </eTypeParameters>
      <eParameters name="clazz">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//Node/getSuccessors.1/T"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="getPredecessors" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return new org.eclipse.emf.common.util.BasicEList&lt;M>();&#xA;&#x9;&#x9;"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getPredecessors/M"/>
      <eTypeParameters name="M">
        <eBounds eClassifier="#//Node"/>
      </eTypeParameters>
    </eOperations>
    <eOperations name="getPredecessors" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(Edge e: this.getIncoming()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e.getSourceElement())){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e.getSourceElement()));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getPredecessors.1/T"/>
      <eTypeParameters name="T">
        <eBounds eClassifier="#//Node"/>
      </eTypeParameters>
      <eParameters name="clazz">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//Node/getPredecessors.1/T"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="getIncoming" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(Edge e: this.getIncoming()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getIncoming/T"/>
      <eTypeParameters name="T">
        <eBounds eClassifier="#//Edge"/>
      </eTypeParameters>
      <eParameters name="clazz">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//Node/getIncoming/T"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="getOutgoing" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(Edge e: this.getOutgoing()){&#xA;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//Node/getOutgoing/T"/>
      <eTypeParameters name="T">
        <eBounds eClassifier="#//Edge"/>
      </eTypeParameters>
      <eParameters name="clazz">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//Node/getOutgoing/T"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="canConnect" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;ConnectionConstraint> oConstraints = getOutgoingConstraints();&#xA;&#x9;&#x9;&#x9;EList&lt;ConnectionConstraint> iConstraints = to.getIncomingConstraints();&#xA;&#x9;&#x9;&#x9;return oConstraints.stream().anyMatch(c -> c.isInEdges(with)) &amp;&amp;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iConstraints.stream().anyMatch(c -> c.isInEdges(with)) &amp;&amp; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;oConstraints.stream().allMatch(c -> c.violationAfterConnect(this, with, to)) &amp;&amp; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iConstraints.stream().allMatch(c -> c.violationAfterConnect(this, with, to)); "/>
      </eAnnotations>
      <eParameters name="with" eType="#//Edge"/>
      <eParameters name="to" eType="#//Node"/>
    </eOperations>
    <eOperations name="getOutgoingConstraints" upperBound="-1" eType="#//ConnectionConstraint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return new org.eclipse.emf.common.util.BasicEList&lt;ConnectionConstraint>();"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getIncomingConstraints" upperBound="-1" eType="#//ConnectionConstraint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return new org.eclipse.emf.common.util.BasicEList&lt;ConnectionConstraint>();"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="incoming" upperBound="-1"
        eType="#//Edge" eOpposite="#//Edge/targetElement"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="outgoing" upperBound="-1"
        eType="#//Edge" eOpposite="#//Edge/sourceElement"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Edge" abstract="true" interface="true"
      eSuperTypes="#//ModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceElement" eType="#//Node"
        eOpposite="#//Node/outgoing"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetElement" eType="#//Node"
        eOpposite="#//Node/incoming"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Container" abstract="true" eSuperTypes="#//ModelElementContainer #//Node"/>
  <eClassifiers xsi:type="ecore:EClass" name="ModelElement" abstract="true" eSuperTypes="#//IdentifiableElement">
    <eOperations name="getRootElement" eType="#//GraphModel">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ModelElementContainer container = this.getContainer();&#xA;&#x9;&#x9;if(container!=null){&#xA;&#x9;&#x9;&#x9;while(container!=null &amp;&amp; !(container instanceof graphmodel.GraphModel))&#xA;&#x9;&#x9;&#x9;&#x9;container= ((ModelElement)container).getContainer();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;if(container!=null)&#xA;&#x9;&#x9;&#x9;&#x9;return (graphmodel.GraphModel)container;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return null;"/>
        <details key="documentation" value="Returns the Root GraphModel of the containment hierarchie.&#xA;null if no containment root can be found"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" eType="#//ModelElementContainer"
        eOpposite="#//ModelElementContainer/modelElements"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ModelElementContainer" abstract="true"
      eSuperTypes="#//IdentifiableElement">
    <eOperations name="getModelElements" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;T> list = new org.eclipse.emf.common.util.BasicEList&lt;T>();&#xA;&#x9;&#x9;if(clazz!=null){&#xA;&#x9;&#x9;&#x9;for(ModelElement e: this.getModelElements()){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(clazz.isInstance(e)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;list.add(clazz.cast(e));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;throw new NullPointerException(&quot;Class must not be null.&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return org.eclipse.emf.common.util.ECollections.unmodifiableEList(list);"/>
      </eAnnotations>
      <eGenericType eTypeParameter="#//ModelElementContainer/getModelElements/T"/>
      <eTypeParameters name="T">
        <eBounds eClassifier="#//ModelElement"/>
      </eTypeParameters>
      <eParameters name="clazz">
        <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
          <eTypeArguments eTypeParameter="#//ModelElementContainer/getModelElements/T"/>
        </eGenericType>
      </eParameters>
    </eOperations>
    <eOperations name="getAllNodes" upperBound="-1" eType="#//Node">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getModelElements(Node.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllEdges" upperBound="-1" eType="#//Edge">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getModelElements(Edge.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllContainers" upperBound="-1" eType="#//Container">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="return getModelElements(Container.class);"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="canContain" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value=" if(nodes!=null&amp;&amp;nodes.size()>0&amp;&amp;getContainmentConstraints().size()>0){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        boolean canContain = true;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        for(int i=1;i==nodes.size();i++){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        &#x9;final java.util.List&lt;Node> subNodes = nodes.subList(i, nodes.size());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        &#x9;Node currentNode = nodes.get(i-1);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        &#x9;canContain &amp;= getContainmentConstraints().stream().anyMatch((c -> !c.violationAfterInsert(currentNode, subNodes,this)));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        }&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;        return  canContain;&#xA;&#x9;&#x9;&#x9;&#x9;        }&#xA;&#x9;&#x9;        return true;"/>
      </eAnnotations>
      <eParameters name="nodes" upperBound="-1" eType="#//Node"/>
    </eOperations>
    <eOperations name="canContain" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="EList&lt;Node> list = new org.eclipse.emf.common.util.BasicEList&lt;Node>();&#xA;&#x9;&#x9;list.add(node);&#xA;&#x9;&#x9;return canContain(list);"/>
      </eAnnotations>
      <eParameters name="node" eType="#//Node"/>
    </eOperations>
    <eOperations name="getContainmentConstraints" upperBound="-1" eType="#//ContainmentConstraint">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value=" org.eclipse.emf.common.util.BasicEList&lt;de.jabc.cinco.meta.core.mgl.model.constraints.ContainmentConstraint>constraints = &#xA;&#x9;&#x9;            new org.eclipse.emf.common.util.BasicEList&lt;de.jabc.cinco.meta.core.mgl.model.constraints.ContainmentConstraint>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;return constraints;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getContainableTypes" upperBound="-1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="if(getContainmentConstraints().size()>0){&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;java.util.HashSet&lt;Class&lt;?>> containables = new java.util.HashSet&lt;>();&#xA;&#x9;&#x9;&#x9;&#x9;getContainmentConstraints().forEach(c -> containables.addAll(c.getContainables(this)));&#xA;&#x9;&#x9;&#x9;&#x9;return new org.eclipse.emf.common.util.BasicEList&lt;Class&lt;?>>(containables);&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}else{&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;graphmodel.GraphModel rootGraphModel = null;&#xA;&#x9;&#x9;&#x9;&#x9;if(this instanceof graphmodel.GraphModel){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rootGraphModel = (graphmodel.GraphModel) this;&#xA;&#x9;&#x9;&#x9;&#x9;}else if(this instanceof graphmodel.Container){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;rootGraphModel = ((graphmodel.Container)this).getRootElement();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;if(rootGraphModel!=null){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return rootGraphModel.getAllNodeTypes();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return null;&#xA;&#x9;&#x9;&#x9;}"/>
      </eAnnotations>
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
        <eTypeArguments/>
      </eGenericType>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="modelElements" upperBound="-1"
        eType="#//ModelElement" containment="true" eOpposite="#//ModelElement/container"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="parameterName" iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="IdentifiableElement" abstract="true"
      interface="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="id" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        defaultValueLiteral="" iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ContainmentConstraint" instanceClassName="de.jabc.cinco.meta.core.mgl.model.constraints.ContainmentConstraint"
      abstract="true" interface="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="ConnectionConstraint" instanceClassName="de.jabc.cinco.meta.core.mgl.model.constraints.ConnectionConstraint"
      abstract="true" interface="true"/>
</ecore:EPackage>
