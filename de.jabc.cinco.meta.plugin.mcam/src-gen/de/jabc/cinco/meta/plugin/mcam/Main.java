package de.jabc.cinco.meta.plugin.mcam;

/**
 * This class was generated from a SIB graph model. Do not edit this file
 * because your changes will get lost during the next code generation. If the
 * class needs to be changed, please edit the original model using the jABC
 * and regenerate the class using the Genesys plugin.
 *
 * @author Java Class Generator (2014-11-12 15:36:16.822)
 */
public class Main extends de.jabc.cinco.meta.plugin.mcam.helper.AbstractService {
    public Main() {}



    public java.lang.String execute(java.util.Map<java.lang.String, java.lang.Object> context) { 
          final de.metaframe.jabc.framework.execution.context.LightweightExecutionContext cg_contextExecution = new de.metaframe.jabc.framework.execution.context.DefaultLightweightExecutionContext(null);
          final de.metaframe.jabc.framework.execution.context.LightweightExecutionContext cg_contextGlobal = cg_contextExecution.getGlobalContext();
          if (context != null) {
              for (java.util.Map.Entry<java.lang.String, java.lang.Object> entry : context.entrySet()) {
                cg_contextGlobal.putLocal(entry.getKey(), entry.getValue());
              }
          }
          final de.metaframe.jabc.framework.execution.context.LightweightExecutionContext cg_contextModel = new de.metaframe.jabc.framework.execution.context.DefaultLightweightExecutionContext(cg_contextExecution);
          final de.metaframe.jabc.framework.execution.LightweightExecutionEnvironment cg_environment = new de.metaframe.jabc.framework.execution.DefaultLightweightExecutionEnvironment(cg_contextExecution);
          cg_environment.pushContext(cg_contextModel);
          return execute(cg_environment);
    }

    @SuppressWarnings({ "unchecked", "boxing" })
    public java.lang.String execute(final de.metaframe.jabc.framework.execution.LightweightExecutionEnvironment cg_executionEnvironment) { 
      de.jabc.cinco.meta.plugin.mcam.helper.GenericElementaryService GetGraphModelName = new de.jabc.cinco.meta.plugin.mcam.helper.GenericElementaryService("de.jabc.cinco.meta.core.sibs.mgl.adapter.mgl.MglMglServiceAdapter", "getGraphModelName", new java.lang.Class<?>[] { de.metaframe.jabc.framework.sib.parameter.foundation.ContextKeyFoundation.class, de.metaframe.jabc.framework.sib.parameter.foundation.ContextKeyFoundation.class }, new java.lang.Object[] { new de.metaframe.jabc.framework.sib.parameter.foundation.ContextKeyFoundation("graphModel", "GLOBAL", true), new de.metaframe.jabc.framework.sib.parameter.foundation.ContextKeyFoundation("graphModelName", "GLOBAL", true) });
      de.jabc.cinco.meta.plugin.mcam.helper.GenericElementaryService PrintConsoleMessage = new de.jabc.cinco.meta.plugin.mcam.helper.GenericElementaryService("de.jabc.adapter.common.io.LightweightServiceAdapter", "print", new java.lang.Class<?>[] { de.metaframe.jabc.framework.sib.parameter.foundation.ContextExpressionFoundation.class, boolean.class }, new java.lang.Object[] { new de.metaframe.jabc.framework.sib.parameter.foundation.ContextExpressionFoundation("Hello model with name ${graphModelName}!", java.lang.Object.class, false), false });


      GetGraphModelName.addSuccessor("default", PrintConsoleMessage);


      try {
        de.jabc.cinco.meta.plugin.mcam.helper.Service cg_service = GetGraphModelName;
        java.lang.String cg_result = "";
        while (cg_service != null) {
          cg_result = cg_service.execute(cg_executionEnvironment);
          if (cg_service instanceof de.jabc.cinco.meta.plugin.mcam.helper.ExitService) {
            break;
          }
          cg_service = cg_service.getSuccessorForBranch(cg_result);
        }
        return cg_result;
      } catch (de.jabc.cinco.meta.plugin.mcam.helper.ServiceException exp) {
        exp.printStackTrace();
      }
      return null;
    }

    /**
    * Runs the model from the command line.
    * @param cg_args The command line arguments.
    */
    public static void main(final java.lang.String[] cg_args) throws java.lang.Exception {
    	final Main cg_instance = new Main();
    	cg_instance.execute(new java.util.HashMap<java.lang.String, java.lang.Object>());
    }

}
